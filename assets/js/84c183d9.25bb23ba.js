"use strict";(self.webpackChunkninjee=self.webpackChunkninjee||[]).push([[1198],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return k}});var l=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=l.createContext({}),p=function(e){var n=l.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return l.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},m=l.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(t),k=r,f=m["".concat(u,".").concat(k)]||m[k]||d[k]||a;return t?l.createElement(f,o(o({ref:n},s),{},{components:t})):l.createElement(f,o({ref:n},s))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}m.displayName="MDXCreateElement"},77530:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return d}});var l=t(87462),r=t(63366),a=(t(67294),t(3905)),o=["components"],i={title:"6. \u4e8c\u53c9\u68111",sidebar_position:6,date:new Date("2022-04-15T00:00:00.000Z"),tags:["algorithm"]},u=void 0,p={unversionedId:"code/algorithm/\u4e8c\u53c9\u68111",id:"code/algorithm/\u4e8c\u53c9\u68111",title:"6. \u4e8c\u53c9\u68111",description:"5. \u6700\u957f\u56de\u6587\u4e32",source:"@site/docs/code/algorithm/\u4e8c\u53c9\u68111.md",sourceDirName:"code/algorithm",slug:"/code/algorithm/\u4e8c\u53c9\u68111",permalink:"/docs/code/algorithm/\u4e8c\u53c9\u68111",tags:[{label:"algorithm",permalink:"/docs/tags/algorithm"}],version:"current",sidebarPosition:6,frontMatter:{title:"6. \u4e8c\u53c9\u68111",sidebar_position:6,date:"2022-04-15T00:00:00.000Z",tags:["algorithm"]},sidebar:"algorithm",previous:{title:"5. \u961f\u5217\u548c\u6808",permalink:"/docs/code/algorithm/\u961f\u5217\u548c\u6808"},next:{title:"6. \u4e8c\u53c9\u68112",permalink:"/docs/code/algorithm/\u4e8c\u53c9\u68112"}},s={},d=[{value:"5. \u6700\u957f\u56de\u6587\u4e32",id:"5-\u6700\u957f\u56de\u6587\u4e32",level:2},{value:"\u89e3\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212",id:"\u89e3\u6cd5\u4e00\u52a8\u6001\u89c4\u5212",level:4},{value:"\u89e3\u6cd5\u4e8c\uff1a\u5206\u7c7b\u8ba8\u8bba",id:"\u89e3\u6cd5\u4e8c\u5206\u7c7b\u8ba8\u8bba",level:4},{value:"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811",id:"105-\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811",level:2},{value:"106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811",id:"106-\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811",level:2},{value:"107. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 II",id:"107-\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386-ii",level:2},{value:"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386",id:"102-\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386",level:2},{value:"103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386",id:"103-\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386",level:2},{value:"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe",id:"199-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe",level:2},{value:"\u89e3\u9898\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148",id:"\u89e3\u9898\u4e00\u5e7f\u5ea6\u4f18\u5148",level:4},{value:"\u89e3\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148",id:"\u89e3\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148",level:4},{value:"637. \u4e8c\u53c9\u6811\u7684\u5c42\u5e73\u5747\u503c",id:"637-\u4e8c\u53c9\u6811\u7684\u5c42\u5e73\u5747\u503c",level:2},{value:"\u89e3\u6cd5\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148",id:"\u89e3\u6cd5\u4e00\u5e7f\u5ea6\u4f18\u5148",level:4},{value:"\u89e3\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148",id:"\u89e3\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148-1",level:4},{value:"429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386",id:"429-n-\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386",level:2},{value:"515. \u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c",id:"515-\u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c",level:2},{value:"116. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488",id:"116-\u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488",level:2},{value:"117. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488 II",id:"117-\u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488-ii",level:2},{value:"\u4f18\u5316\uff1a\u5185\u5b58\u4f18\u5316",id:"\u4f18\u5316\u5185\u5b58\u4f18\u5316",level:4},{value:"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",id:"104-\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u6df1\u5ea6\u4f18\u5148",id:"\u65b9\u6cd5\u4e00\u6df1\u5ea6\u4f18\u5148",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u5e7f\u5ea6\u4f18\u5148",id:"\u65b9\u6cd5\u4e8c\u5e7f\u5ea6\u4f18\u5148",level:4},{value:"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",id:"111-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148 bfs",id:"\u65b9\u6cd5\u4e00\u5e7f\u5ea6\u4f18\u5148-bfs",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148 dfs",id:"\u65b9\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148-dfs",level:4},{value:"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811",id:"226-\u7ffb\u8f6c\u4e8c\u53c9\u6811",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs \u9012\u5f52",id:"\u65b9\u6cd5\u4e00dfs-\u9012\u5f52",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1abfs \u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8cbfs-\u8fed\u4ee3",level:4},{value:"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386",id:"144-\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e00\u9012\u5f52",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3",level:4},{value:"\u65b9\u6cd5\u4e09\uff1a\u901a\u7528\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e09\u901a\u7528\u8fed\u4ee3",level:4},{value:"145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386",id:"145-\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e00\u9012\u5f52-1",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-1",level:4},{value:"\u65b9\u5f0f\u4e09\uff1a\u7edf\u4e00\u8fed\u4ee3",id:"\u65b9\u5f0f\u4e09\u7edf\u4e00\u8fed\u4ee3",level:4},{value:"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",id:"94-\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e00\u9012\u5f52-2",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-2",level:4},{value:"\u65b9\u6cd5\u4e09\uff1a\u7edf\u4e00\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e09\u7edf\u4e00\u8fed\u4ee3",level:4},{value:"101. \u5bf9\u79f0\u4e8c\u53c9\u6811",id:"101-\u5bf9\u79f0\u4e8c\u53c9\u6811",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e00\u9012\u5f52-3",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u6808\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u6808\u8fed\u4ee3",level:4},{value:"\u65b9\u6cd5\u4e09\uff1a\u961f\u5217\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e09\u961f\u5217\u8fed\u4ee3",level:4},{value:"559. N \u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",id:"559-n-\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",level:2},{value:"\u65b9\u6cd5\u4e00\uff1abfs \u8fed\u4ee3",id:"\u65b9\u6cd5\u4e00bfs-\u8fed\u4ee3",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1adfs \u9012\u5f52",id:"\u65b9\u6cd5\u4e8cdfs-\u9012\u5f52",level:4},{value:"\u65b9\u6cd5\u4e09\uff1adfs \u8fed\u4ee3",id:"\u65b9\u6cd5\u4e09dfs-\u8fed\u4ee3",level:4},{value:"222. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570",id:"222-\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7279\u70b9",id:"\u65b9\u6cd5\u4e8c\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7279\u70b9",level:4},{value:"110. \u5e73\u8861\u4e8c\u53c9\u6811",id:"110-\u5e73\u8861\u4e8c\u53c9\u6811",level:2},{value:"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",id:"257-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52+\u56de\u6eaf",id:"\u65b9\u6cd5\u4e00\u9012\u5f52\u56de\u6eaf",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-3",level:4},{value:"100. \u76f8\u540c\u7684\u6811",id:"100-\u76f8\u540c\u7684\u6811",level:2},{value:"\u65b9\u5f0f\u4e00\uff1a\u9012\u5f52 dfs",id:"\u65b9\u5f0f\u4e00\u9012\u5f52-dfs",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3 bfs",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-bfs",level:4},{value:"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52 dfs",id:"\u65b9\u6cd5\u4e00\u9012\u5f52-dfs",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3 bfs",id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-bfs-1",level:4},{value:"\u65b9\u6cd5\u4e09\uff1a\u8fed\u4ee3 dfs",id:"\u65b9\u6cd5\u4e09\u8fed\u4ee3-dfs",level:4},{value:"513. \u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c",id:"513-\u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3 bfs",id:"\u65b9\u6cd5\u4e00\u8fed\u4ee3-bfs",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52 dfs",id:"\u65b9\u6cd5\u4e8c\u9012\u5f52-dfs",level:4},{value:"112. \u8def\u5f84\u603b\u548c",id:"112-\u8def\u5f84\u603b\u548c",level:2},{value:"\u65b9\u5f0f\u4e00\uff1adfs \u9012\u5f52",id:"\u65b9\u5f0f\u4e00dfs-\u9012\u5f52",level:4},{value:"\u65b9\u5f0f\u4e8c\uff1adfs \u8fed\u4ee3",id:"\u65b9\u5f0f\u4e8cdfs-\u8fed\u4ee3",level:4},{value:"113. \u8def\u5f84\u603b\u548c II",id:"113-\u8def\u5f84\u603b\u548c-ii",level:2},{value:"\u65b9\u5f0f\u4e00\uff1adfs \u9012\u5f52",id:"\u65b9\u5f0f\u4e00dfs-\u9012\u5f52-1",level:4},{value:"\u65b9\u5f0f\u4e8c\uff1abfs \u8fed\u4ee3",id:"\u65b9\u5f0f\u4e8cbfs-\u8fed\u4ee3",level:4},{value:"\u65b9\u6cd5\u4e09\uff1adfs \u8fed\u4ee3 + map \u4f18\u5316\u5185\u5b58",id:"\u65b9\u6cd5\u4e09dfs-\u8fed\u4ee3--map-\u4f18\u5316\u5185\u5b58",level:4},{value:"437. \u8def\u5f84\u603b\u548c III",id:"437-\u8def\u5f84\u603b\u548c-iii",level:2},{value:"\u9762\u8bd5\u9898 04.12. \u6c42\u548c\u8def\u5f84",id:"\u9762\u8bd5\u9898-0412-\u6c42\u548c\u8def\u5f84",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u81ea\u5e95\u5411\u4e0a\u6c42\u548c\uff08\u81ea\u5df1\u7684\u65b9\u6cd5\uff09",id:"\u65b9\u6cd5\u4e00\u81ea\u5e95\u5411\u4e0a\u6c42\u548c\u81ea\u5df1\u7684\u65b9\u6cd5",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u81ea\u9876\u5411\u4e0b\u6c42\u548c",id:"\u65b9\u6cd5\u4e8c\u81ea\u9876\u5411\u4e0b\u6c42\u548c",level:4},{value:"\u65b9\u6cd5\u4e09\uff1a\u524d\u7f00\u548c",id:"\u65b9\u6cd5\u4e09\u524d\u7f00\u548c",level:4},{value:"70. \u722c\u697c\u68af",id:"70-\u722c\u697c\u68af",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212 \u6b63\u89e3",id:"\u65b9\u6cd5\u4e00\u52a8\u6001\u89c4\u5212-\u6b63\u89e3",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u4f18\u5316-\u52a8\u6001\u89c4\u5212",id:"\u65b9\u6cd5\u4e8c\u4f18\u5316-\u52a8\u6001\u89c4\u5212",level:4},{value:"\u65b9\u6cd5\u4e09\uff1adfs \u8d85\u65f6",id:"\u65b9\u6cd5\u4e09dfs-\u8d85\u65f6",level:4},{value:"988. \u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",id:"988-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs-1",level:4},{value:"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84",id:"543-\u4e8c\u53c9\u6811\u7684\u76f4\u5f84",level:2},{value:"687. \u6700\u957f\u540c\u503c\u8def\u5f84",id:"687-\u6700\u957f\u540c\u503c\u8def\u5f84",level:2},{value:"124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c",id:"124-\u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c",level:2},{value:"<strong>\u6811\u95ee\u9898\u7684\u672c\u8d28\uff1a</strong>",id:"\u6811\u95ee\u9898\u7684\u672c\u8d28",level:4},{value:"\u89e3\u9898\u601d\u8def",id:"\u89e3\u9898\u601d\u8def",level:4},{value:"654. \u6700\u5927\u4e8c\u53c9\u6811",id:"654-\u6700\u5927\u4e8c\u53c9\u6811",level:2},{value:"617. \u5408\u5e76\u4e8c\u53c9\u6811",id:"617-\u5408\u5e76\u4e8c\u53c9\u6811",level:2},{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs-2",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1abfs",id:"\u65b9\u6cd5\u4e8cbfs",level:4}],m={toc:d};function k(e){var n=e.components,i=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,l.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"5-\u6700\u957f\u56de\u6587\u4e32"},"5. \u6700\u957f\u56de\u6587\u4e32"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0417\uff0cmid")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8003\u70b9\uff1a\u52a8\u6001\u89c4\u5212\u3001\u5206\u7c7b\u8ba8\u8bba"))),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e00\u52a8\u6001\u89c4\u5212"},"\u89e3\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5206\u6790\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u52a8\u6001\u89c4\u5212\u7684 dp\uff1a"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dp[i][j]")," \u8868\u793a ",(0,a.kt)("inlineCode",{parentName:"li"},"i~j")," \u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6b64\u65f6\u8d4b\u503c\u4e3a true\uff1a ",(0,a.kt)("inlineCode",{parentName:"li"},"dp[i][j] = true"),";")),(0,a.kt)("p",null,"\u5224\u65ad\u5f53\u524d dp","[i][j]"," \u662f\u5426\u4e3a\u4e00\u4e2a\u56de\u6587\u4e32\u65f6\uff0c\u5206\u6790\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"s[i]")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"s[j]")," \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\uff1a",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u5b50\u4e32 ",(0,a.kt)("inlineCode",{parentName:"li"},"dp[i+1][j-1]")," \u662f\u56de\u6587\u4e32\uff0c\u5b83\u5c31\u662f\u56de\u6587\u4e32\uff1b"),(0,a.kt)("li",{parentName:"ol"},"\u53cd\u4e4b\uff0c\u5b50\u4e32\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u5b83\u5c31\u4e0d\u662f\u56de\u6587\u4e32"))),(0,a.kt)("li",{parentName:"ol"},"\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5c31\u4e00\u5b9a\u4e0d\u662f\u56de\u6587\u4e32\u3002")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u627e\u5230\u8f6c\u6362\u65b9\u7a0b\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"if (s[i] === s[j]) {\n  dp[i][j] = dp[i-1][j+1];\n  range = [x-1, y+1];\n} else {\n  dp[i-1][j+1] = false;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u627e\u5230\u95ee\u9898\u8fb9\u754c\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u5b50\u4e32\u957f\u5ea6\u4e3a1\uff0c\u80af\u5b9a\u662f\u4e00\u4e2a\u56de\u6587\u4e32\nfor (let i = 0; i < len ; i++) {\n  dp[i][i] = true;\n}\n\n// \u5b57\u4e32\u957f\u5ea6\u4e3a2\uff0c\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u76f8\u7b49\uff0c\u4e5f\u662f\u4e00\u4e2a\u56de\u6587\u4e32\nfor (let i = 0; i < len - 1 ; i++) {\n  if (s[i] === [i+1])\n    dp[i][i+1] = true;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6c42\u89e3\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var longestPalindrome = function (s) {\n  // \u7279\u4f8b\n  if (!s || s.length === 0) return;\n  const len = s.length;\n  let range = [0, 0]\n\n  // \u521d\u59cb\u5316\u4e8c\u7ef4\u6570\u7ec4\n  // dp[i][j] \u8868\u793as[i...j] \u662f\u5426\u662f\u56de\u6587\u4e32\n  const dp = new Array(len)\n  for (let i = 0; i < len; i++) {\n    dp[i] = [];\n  }\n\n  // \u5904\u7406\u8fb9\u754c:\n  for (let i = 0; i < len; i++) {\n    //n=1\u65f6\uff0c\u90fd\u662f\u56de\u6587\u4e32\n    dp[i][i] = true;\n    if (i < len - 1 && s[i] === s[i + 1]) {\n      // n=2\u65f6\uff0c\u4e24\u4e2a\u5143\u7d20\u76f8\u7b49\u4e5f\u662f\u56de\u6587\u4e32\uff1a'bb'\n      dp[i][i + 1] = true;\n      range = [i, i + 1]\n    }\n  }\n\n  // n \u4e3a\u5224\u65ad\u56de\u6587\u4e32\u7684\u957f\u5ea6\uff0c\u4ece3\u5f00\u59cb\n  for (let n = 3; n <= len; n++) {\n    // \u5de6\u4e0b\u6807\n    for (let i = 0; i <= len - n; i++) {\n      // \u53f3\u4e0b\u6807\n      let j = i + n - 1;\n      if (dp[i + 1][j - 1]) {\n        // \u5982\u679c\u4e0a\u4e00\u4e2a\u662f\u56de\u6587\u4e32\uff0c\u5219\u5224\u65ad\u5f53\u524d\u4e0b\u6807\u662f\u4e0d\u662f\u56de\u6587\u4e32\n        if (s[i] === s[j]) {\n          dp[i][j] = true;\n          range = [i, j];\n        }\n      }\n    }\n  }\n\n  return s.slice(range[0], range[1] + 1)\n};\n")),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e8c\u5206\u7c7b\u8ba8\u8bba"},"\u89e3\u6cd5\u4e8c\uff1a\u5206\u7c7b\u8ba8\u8bba"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u5fc3\u6269\u5c55\u7b97\u6cd5")),(0,a.kt)("p",null,"\u628a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5f53\u6210\u4e2d\u5fc3\uff08\u4e2d\u5fc3\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff09\u7136\u540e\u5de6\u53f3\u6269\u5c55\uff0c\u5bfb\u627e\u4ee5\u5f53\u524d\u4e2d\u5fc3\u4e3a\u57fa\u7684\u6700\u957f\u56de\u6587\u4e32\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var longestPalindrome = function (s) {\n  // \u7279\u6b8a\u60c5\u51b5\n  if (!s || s.length === 0) return;\n  \n  const len = s.length;\n  // range[0]\u548crange[1]\u4ee3\u8868\u6700\u957f\u56de\u6587\u4e32\u7684\u8d77\u59cb\u548c\u7ec8\u70b9\u5750\u6807\n  let range = [0, 0]\n\n  // \u904d\u5386\u6bcf\u4e00\u4e2a\u6570\uff0c\u628a\u8fd9\u4e2a\u6570\u5f53\u6210\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\uff0c\u5411\u5de6\u53f3\u65b9\u5411\u6269\u5c55\u3002\n  for (let i = 0; i < len; i++) {\n    estimate(i);\n  }\n  return s.slice(range[0], range[1] + 1);\n\n  // \u56de\u6587\u6709\u4e24\u79cd\uff1a\u4e2d\u5fc3\u70b9\u662f\u4e00\u4e2a\u7684\u5355\u6570(aba)\uff0c\u4e2d\u5fc3\u70b9\u662f\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53cc\u6570(abba\u3001abbba) \n  // \u628a\u56de\u6587\u4e32\u7edf\u4e00\u770b\u6210\uff1a\u4e2d\u95f4\u90e8\u5206+\u5de6\u53f3\u4e0d\u5206\u3002\u4e2d\u95f4\u90e8\u5206\u5168\u90e8\u662f\u540c\u4e00\u5b57\u7b26\uff0c\u5de6\u53f3\u90e8\u5206\u5bf9\u79f0\u76f8\u7b49\n  function estimate(x) {\n    let y = x;\n    // \u5904\u7406\u56de\u6587\u4e2d\u95f4\u90e8\u5206\uff1a\u8fde\u7eed\u76f8\u540c\u5b57\u7b26\n    while (y + 1 < len && s[y] === s[y + 1]) {\n      y++\n    }\n    // \u5904\u7406\u56de\u6587\u7684\u5de6\u53f3\u4e24\u8fb9\uff1a\u627e\u5230\u6700\u957f\u56de\u6587\u4e32\n    while ( x - 1 >= 0 && y < len && s[x-1] === s[y+1]) {\n      x--;\n      y++;\n    }\n    // \u5224\u65ad\u5f53\u524d\u627e\u5230\u7684\u56de\u6587\u4e32\u548c\u4e4b\u524d\u4fdd\u5b58\u7684\u56de\u6587\u4e32\u54ea\u4e00\u4e2a\u66f4\u957f\n    if (range[1] - range[0] < y - x) {\n      range = [x, y];\n    }\n  }\n};\n")),(0,a.kt)("p",null,"\u72af\u9519\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"dp[i][j] = true")," \u5199\u6210\u4e86 ",(0,a.kt)("inlineCode",{parentName:"li"},"dp[i][j] === true"),"\uff0c\u8fd9\u4e2a\u95ee\u9898\u8fd8\u770b\u4e86\u5f88\u4e45\u6ca1\u627e\u5230\u3002")),(0,a.kt)("h2",{id:"105-\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"},"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0419\u3001mid")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u52a8\u6001\u89c4\u5212\uff0c\u4e8c\u53c9\u6811\u6784\u9020"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. \u627e\u7279\u70b9")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"s",src:t(11782).Z,width:"277",height:"302"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"preorder = [3,9,20,15,7], \ninorder = [9,3,15,20,7]\n")),(0,a.kt)("p",null,"\u524d\u5e8f\u904d\u5386\u7684\u7279\u70b9\uff1a\u6839\u3001\u5de6\u3001\u53f3\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"preorder[0]")," \u5c31\u662f\u6839\u8282\u70b9"),(0,a.kt)("p",null,"\u4e2d\u5e8f\u904d\u5386\u7684\u7279\u70b9\uff1a\u5de6\u3001\u6839\u3001\u53f3\u3002\u627e\u5230\u6839\u8282\u70b9\u540e\uff0c\u5de6\u8fb9\u7684\u662f\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u7684\u662f\u53f3\u5b50\u6811\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u4e2d\u5e8f\u5217\u8868\u4e2d\uff0c\u6839\u7684\u4e0b\u6807:\nconst index = inorder.indexOf(preorder[0]);\n// \u4ece\u4e2d\u5e8f\u5217\u8868\u4e2d\uff0c\u627e\u5230\u5de6\u5b50\u6811\u957f\u5ea6\uff0c\u53f3\u5b50\u6811\u957f\u5ea6\uff1a\nconst leftLen = index\nconst rightLen = inorder.length - leftLen - 1;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. \u627e\u601d\u8def")),(0,a.kt)("p",null,"\u8fd9\u6837\uff0c\u53ef\u4ee5\u6839\u636e\u4e0b\u6807\u5207\u5206\u51fa\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u524d\u5e8f\u5217\u8868\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[\u6839\u3001\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811]"),"\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u5e8f\u5217\u8868\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[\u5de6\u5b50\u6811\u3001\u6839\u3001\u53f3\u5b50\u6811]"),"\uff1b")),(0,a.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5176\u503c\u4e3a\u5f53\u524d\u627e\u5230\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"\u6839\u8282\u70b9"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"\u5de6\u5b50\u6811")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"\u53f3\u5b50\u6811")," \u9012\u5f52\u7b49\u5f85\u7b54\u6848\uff1b"),(0,a.kt)("p",null,"\u7136\u540e\u9012\u5f52\uff0c\u628a ",(0,a.kt)("inlineCode",{parentName:"p"},"\u524d\u5e8f\u5217\u8868")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"\u4e2d\u5e8f\u5217\u8868")," \u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5de6\u5b50\u6811")," \u63d0\u53d6\u51fa\u6765\uff0c\u8fdb\u4e00\u6b65\u62c6\u5206\u627e\u5230 ",(0,a.kt)("strong",{parentName:"p"},"\u6839"),"\u3001",(0,a.kt)("strong",{parentName:"p"},"\u5de6"),"\u3001",(0,a.kt)("strong",{parentName:"p"},"\u53f3"),"\uff1b\u53f3\u5b50\u6811\u540c\u6837\u64cd\u4f5c\u3002"),(0,a.kt)("p",null,"\u8fd9\u6837\uff0c\u76f4\u5230\u5207\u5206\u4e3a\u957f\u5ea6\u4e3a 3 \u7684\u6700\u5c0f\u5b50\u6811\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u524d\u5e8f\u5217\u8868\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[\u6839\u3001\u5de6\u3001\u53f3]"),"\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u5e8f\u5217\u8868\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[\u5de6\u3001\u6839\u3001\u53f3]"),"\uff1b")),(0,a.kt)("p",null,"\u5f00\u59cb\u9010\u5c42\u8fd4\u56de\uff0c\u5f97\u5230\u4e00\u6574\u4e2a\u6811\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\u5047\u5b9a\uff1a\n- \u5148\u5e8f\u904d\u5386\uff1a[3\uff0c_, _, _, _, _];\n- \u4e2d\u5e8f\u904d\u5386\uff1a[0, 1, 2, 3, 4, 5];\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\uff1a\u6839\u3001\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u4e86:\n- \u5148\u5e8f\u904d\u5386\uff1a['\u6839', \u5de6, \u5de6, \u5de6 , \u53f3, \u53f3]\n- \u4e2d\u5e8f\u904d\u5386\uff1a[ \u5de6 , \u5de6, \u5de6,'\u6839', \u53f3, \u53f3]\n\n\u7136\u540e\u6c42\u51fa\uff1a\u6839\u7684\u4e0b\u6807\u3001\u5de6\u5b50\u6811\u7684\u957f\u5ea6\n\u6700\u540e\u53ef\u4ee5\u786e\u5b9a\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u7684\u5934\u5c3e\u4e24\u4e2a\u4e0b\u6807\u4e86\uff08\u89c1\u4e0b\u6587\uff09\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3. \u62bd\u8c61")),(0,a.kt)("p",null,"\u5047\u5b9a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u524d\u5e8f\u5217\u8868\u7684\u5de6\u5b50\u6811\uff0c\u4e0b\u6807\u4e3a\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[preL, preR]")),(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u5e8f\u5217\u8868\u7684\u5de6\u5b50\u6811\uff0c\u4e0b\u6807\u4e3a\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"[inL, inR]"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u6839\u7684\u503c\uff1a\nconst rootValue = preorder[preL];\n// \u4e2d\u5e8f\u5217\u8868\u4e2d\uff0c\u6839\u5750\u6807\uff1a\nconst index = inorder.indexOf(root);\n// \u7531\u6b64\u627e\u5230\u5de6\u5b50\u6811\u7684\u957f\u5ea6\nconst subLen = index - inL;\n// \u524d\u5e8f\u5217\u4e2d\u7684\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\nconst preLeftTree = [preL + 1, preL + subLen];\nconst preRightTree = [preL + subLen + 1, preR];\n// \u4e2d\u5e8f\u5217\u4e2d\u7684\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\nconst inLeftTree = [inL, index - 1];\nconst inRightTree = [index + 1, inR];\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4. \u8fb9\u754c")),(0,a.kt)("p",null,"\u6bcf\u6b21\u9012\u5f52\uff0c\u90fd\u662f\u5148\u786e\u5b9a\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u7136\u540e\u4ee5\u8fd9\u4e2a\u6839\u7ed3\u70b9\u4e3a\u5b50\u6811\u7684\u57fa\uff0c\u6784\u9020\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5de6\u53f3\u5b50\u6811\u5168\u90e8\u786e\u5b9a\u5b8c\u6210\u540e\uff0c\u518d\u8fd4\u56de\u8fd9\u4e2a ",(0,a.kt)("strong",{parentName:"li"},"\u5b50\u6811\u672c\u8eab"),"\u3002")),(0,a.kt)("p",null,"\u8003\u8651\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9762\u5bf9\u67d0\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u4f1a\u5148\u627e\u6839\u7ed3\u70b9\uff0c\u518d\u901a\u8fc7\u6839\u7ed3\u70b9\u4e0b\u8868\u627e\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u7ed3\u70b9\u3002")),(0,a.kt)("p",null,"\u5f53\u67d0\u4e2a\u5b50\u5e8f\u5217\u62c6\u5206\u7684\u8db3\u591f\u5c0f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u957f\u5ea6\u4e3a 3 \u548c 3 \u4ee5\u4e0a\u65f6\uff0c\u4e00\u5b9a\u6709\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811 ",(0,a.kt)("strong",{parentName:"li"},"\u53ef\u80fd")," \u6709\u4e00\u4e2a\u5b50\u6811\u4e0d\u5b58\u5728\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u957f\u5ea6\u4e3a 2 \u65f6\uff0c\u4e00\u5b9a\u6709\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811 ",(0,a.kt)("strong",{parentName:"li"},"\u5fc5\u5b9a")," \u6709\u4e00\u4e2a\u5b50\u6811\u4e0d\u5b58\u5728\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u957f\u5ea6\u4e3a 1 \u65f6\uff0c\u4e00\u5b9a\u6709\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811 ",(0,a.kt)("strong",{parentName:"li"},"\u5168\u90e8\u4e0d\u5b58\u5728"),"\uff1b")),(0,a.kt)("p",null,"\u7efc\u4e0a\uff0c\u957f\u5ea6\u4e3a 1 \u4ee5\u4e0a\u65f6\uff0c\u80af\u5b9a\u6709\u6839\u7ed3\u70b9\uff0c\u6240\u4ee5\u4e00\u5b9a\u80fd\u521b\u5efa\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u4e0d\u662f\u95ee\u9898\u7684\u8fb9\u754c\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u957f\u5ea6\u4e3a 0 \u65f6\uff0c\u6839\u7ed3\u70b9\u3001\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u90fd\u4e0d\u5b58\u5728\uff0c",(0,a.kt)("strong",{parentName:"li"},"\u8fd9\u4e2a\u8282\u70b9\u4e5f\u4e0d\u5b58\u5728\u4e86"),"\u3002")),(0,a.kt)("p",null,"\u627e\u5230\u4e86\u8fb9\u754c\uff0c\u5f53\u8fd9\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5219\u904d\u5386\u5230\u4e86\u5206\u652f\u7684\u8fb9\u754c\uff0c\u4e0d\u4f1a\u518d\u8fd4\u56de\u65b0\u7684\u7ed3\u70b9\u4e86\u3002"),(0,a.kt)("p",null,"\u6240\u4ee5\uff0c\u8fb9\u754c\u5c31\u662f\u5f53\u5b50\u5e8f\u5217\u7684 \u5de6\u4e0b\u6807 > \u53f3\u4e0b\u6807\u65f6\uff0c\u8bc1\u660e\u8fd9\u4e2a\u5e8f\u5217\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u8fd4\u56de null"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"if (preL > preR) {\n  return null;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"5. \u6c42\u89e3")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var buildTree = function(preorder, inorder) {\n  const len = preorder.length\n  // \u5f00\u59cb\u9012\u5f52\n  return build(0, len-1, 0, len-1);\n\n  function build(preL, preR, inL, inR) {\n    // \u8fb9\u754c\uff0c\u9012\u5f52\u7684 return\n    if (preL > preR) {\n      return null;\n    }\n\n    // \u65b0\u5efa\u6839\u7ed3\u70b9\n    const root = new TreeNode();\n    root.val = preorder[preL];\n    // \u627e\u6839\u7ed3\u70b9\u5728\u4e2d\u5e8f\u5217\u4e2d\u7684\u4e0b\u6807\n    const index = inorder.indexOf(root.val);\n    // \u627e\u5230\u5de6\u5b50\u6811\u7684\u957f\u5ea6\n    const subLen = index - inL;\n    // \u9012\u5f52\uff1a\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\n    root.left = build(preL+1, preL+subLen, inL, index-1);\n    root.right = build(preL+subLen+1, preR, index+1, inR);\n    return root;\n  }\n};\n")),(0,a.kt)("h2",{id:"106-\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"},"106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/"},"106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0420\uff0cmid")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u52a8\u6001\u89c4\u5212\uff0c\u4e8c\u53c9\u6811\u6784\u9020"))),(0,a.kt)("p",null,"\u601d\u8def\u540c 105\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var buildTree = function(inorder, postorder) {\n  // \u7279\u4f8b\n  if (!inorder || !postorder || inorder.length === 0 || postorder.length === 0)  return null;\n  const len = inorder.length;\n  return build(0, len-1, 0, len-1);\n\n  function build(inL, inR, poL, poR) {\n    // \u8fb9\u754c\n    if (inL > inR) {\n      return null;\n    }\n\n    // \u7ed3\u70b9\n    const root = new TreeNode();\n    root.val = postorder[poR];\n    // \u4e0b\u6807\n    const index = inorder.indexOf(root.val);\n    const length = index - inL;\n    // \u9012\u5f52\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\n    root.left = build(inL, index-1, poL, poL+length-1);\n    root.right = build(index+1, inR, poL+length, poR-1);\n\n    return root;\n  }\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u76f8\u5173\u9898\u76ee\uff1a0511\uff5c",(0,a.kt)("a",{parentName:"li",href:"https://leetcode.cn/problems/serialize-and-deserialize-bst/"},"449. \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e8c\u53c9\u641c\u7d22\u6811"))),(0,a.kt)("h2",{id:"107-\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386-ii"},"107. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 II"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/"},"107. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 II")),(0,a.kt)("li",{parentName:"ul"},"0420, mid"),(0,a.kt)("li",{parentName:"ul"},"\u4e8c\u53c9\u6811\u6784\u9020")),(0,a.kt)("p",null,"\u9898\u89e3\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e3b\u8981\u662f\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"li"},"curRes")," \u653e\u5165 ",(0,a.kt)("inlineCode",{parentName:"li"},"res")," \u65f6\u7684\u6539\u52a8\uff0c\u53ea\u9700\u8981\u4ece\u4e4b\u524d\u7684\u961f\u5934 ",(0,a.kt)("inlineCode",{parentName:"li"},"push"),"\uff0c\u6539\u4e3a\u961f\u5c3e\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"unshift")," \u5c31\u53ef\u4ee5\u4e86\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var levelOrderBottom = function (root) {\n  if (!root) return [];\n  const res = [];\n  const quene = [];\n  quene.push(root);\n\n  while (quene.length) {\n    // \u8bb0\u5f55\u5c42\u7ea7\u4fe1\u606f\n    const len = quene.length;\n    const curRes = [];\n    for (let i = 0; i < len; i++) {\n      const node = quene.shift();\n      curRes.push(node.val);\n      \n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    res.unshift(curRes);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"102-\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/"},"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386")),(0,a.kt)("li",{parentName:"ul"},"0421\uff0c mid\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u5c42\u5e8f\u904d\u5386\u57fa\u672c\u529f")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var levelOrder = function(root) {\n  // \u7279\u503c\n  if (!root) return [];\n  // \u961f\u5217\n  //   unshift, [push]\n  //   [shift], pop\n  const quene = [];\n  const res = [];\n\n  // \u5148\u653e\u5165\u4e00\u6839\u7ed3\u70b9\uff0c\u7136\u540ewhile\u5faa\u73af\n  quene.push(root);\n  while (quene.length){\n    // \u8bb0\u5f55\u6bcf\u5c42\u7684\u957f\u5ea6\u3001\u7ed3\u679c\n    const levelLength = quene.length;\n    const levelRes = [];\n    // for\u904d\u5386\u8be5\u884c\n    for (let i = 0; i < levelLength; i++){\n      const node = quene.shift();\n      levelRes.push(node.val);\n      //\u2757\ufe0f\u5343\u4e07\u8bb0\u5f97\u8981\u5224\u65ad\u5b58\u5728\uff0c\u7136\u540e\u518dpush\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    res.push(levelRes);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"103-\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386"},"103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/"},"103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386")),(0,a.kt)("li",{parentName:"ul"},"0421\uff0cmid\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u89e3\u6790\uff1a",(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/solution/er-cha-shu-de-ju-chi-xing-ceng-xu-bian-l-qsun/"},"https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/solution/er-cha-shu-de-ju-chi-xing-ceng-xu-bian-l-qsun/")),(0,a.kt)("li",{parentName:"ul"},"\u6839\u636e\u56fe\u8868\u81ea\u5df1\u753b\u4e00\u4e0b\u5c31\u8bb0\u5fc6\u6df1\u523b\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var zigzagLevelOrder = function (root) {\n  // \u7279\n  if (!root) return [];\n\n  const res = []\n  const quene = [];\n  // true is ==>\n  let flag = false;\n  // shift, push\n  quene.push(root);\n\n  while (quene.length) {\n    const levelLen = quene.length;\n    const levelRes = []\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      // \u5728\u6bcf\u5c42\u63a8\u5165\u6570\u65f6\uff0c\u9700\u8981\u6839\u636eflag\u8fdb\u884c\u6b63\u5411/\u53cd\u5411\u63a8\u5165\n      flag ? levelRes.unshift(node.val) : levelRes.push(node.val);\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n\n    }\n    flag = !flag;\n    res.push(levelRes);\n  }\n  return res\n};\n")),(0,a.kt)("h2",{id:"199-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"},"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-right-side-view/"},"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe")),(0,a.kt)("li",{parentName:"ul"},"0422\uff0cmid\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u57fa\u672c\u9898\uff0c\u5e7f\u5ea6\u4f18\u5148\uff08\u5c42\u5e8f\u904d\u5386\uff09\uff0c\u6df1\u5ea6\u4f18\u5148\uff08\u2753\u2753\u904d\u5386\uff09")),(0,a.kt)("h4",{id:"\u89e3\u9898\u4e00\u5e7f\u5ea6\u4f18\u5148"},"\u89e3\u9898\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148"),(0,a.kt)("p",null,"\u57fa\u4e8e\u5c42\u5e8f\u904d\u5386\uff0c\u53ea\u9700\u8981\u5728 level \u6bcf\u5c42\u8fd4\u56de\u8be5\u5c42\u904d\u5386\u51fa\u7684\u6240\u6709\u503c\u7684\u65f6\u5019\uff0c\u53ea\u8fd4\u56de\u904d\u5386\u5230\u7684\u6700\u540e\u4e00\u4e2a\u503c\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var rightSideView = function (root) {\n  // \u5148\u5c42\u5e8f\uff0c\n  // \u540e\u53ea\u63d0\u53d6\u6bcf\u5c42\u6700\u53f3\u8fb9\u7684\u8282\u70b9\n\n  // \u7279\n  if (!root) return [];\n\n  //  shift<=======< push\n  const res = [];\n  const quene = [root];\n\n  while (quene.length) {\n    const levelLen = quene.length;\n    const levelRes = []\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      levelRes.push(node.val);\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    // \u2757\ufe0f\u53ea\u8fd4\u56de\u8be5\u5c42\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002\n    res.push(levelRes[levelRes.length - 1])\n  }\n  return res\n};\n")),(0,a.kt)("p",null,"\u66f4\u5999\u7684\u89e3\u6cd5\uff1a"),(0,a.kt)("p",null,"\u4e0d\u9700\u8981\u5728 for \u5faa\u73af\u904d\u5386\u6bcf\u5c42\u7ed3\u70b9\u7684\u65f6\u5019\uff0c\u7528 levelRes \u4fdd\u5b58\u5168\u90e8\u7684\u7ed3\u70b9\u503c\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6211\u4eec\u8981\u7684\u662f level \u8fd9\u4e00\u5c42\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u3002"),(0,a.kt)("li",{parentName:"ul"},"levelLen \u8bb0\u5f55\u4e86\u8be5\u5c42\u7684\u5168\u90e8\u8282\u70b9\u6570",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6211\u53ef\u4ee5\u5728\u6bcf\u904d\u5386\u8be5\u5c42\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u8ba9 levelLen \u51cf1\uff0c\u5f53 levelLen \u51cf\u5c11\u5230 1 \u7684\u65f6\u5019\uff0c\u8bf4\u660e\u5df2\u7ecf\u4fbf\u5229\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e86\uff0c\u7136\u540e\u8bb0\u5f55\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u5373\u53ef\u3002")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u4ec5\u8d34\u51fa while \u5185\u7684\u4ee3\u7801\nwhile (quene.length) {\n  let levelLen = quene.length;\n  while (levelLen) {\n    const node = quene.shift();\n    if (levelLen === 1) res.push(node.val);\n    node.left && quene.push(node.left);\n    node.right && quene.push(node.right);\n    levelLen--;\n  }\n}\n\n// \u8fd9\u6837\u4e5f\u53ef\u4ee5\uff0c\u53ea\u9700\u8981\u5224\u65ad 'i === levelLen - 1' \u5373\u53ef\nwhile (quene.length) {\n  const levelLen = quene.length;\n  for (let i = 0; i < levelLen; i++) {\n    const node = quene.shift();\n    if (i === levelLen - 1) res.push(node.val)\n    node.left && quene.push(node.left);\n    node.right && quene.push(node.right);\n  }\n}\n")),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148"},"\u89e3\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-right-side-view/solution/shen-du-you-xian-sou-suo-by-shetia-2/"},"https://leetcode-cn.com/problems/binary-tree-right-side-view/solution/shen-du-you-xian-sou-suo-by-shetia-2/"))),(0,a.kt)("p",null,"\u6280\u5de7\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6df1\u5ea6\u4f18\u5148\uff0c\u987a\u5e8f\u662f\uff1a\u6839\u3001\u53f3\u3001\u5de6\u3002 "),(0,a.kt)("li",{parentName:"ol"},"\u56e0\u4e3a\u6bcf\u4e00\u5c42\u53ea\u8981\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u7528\u7ed3\u679c\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"li"},"res.length")," \u6765\u8868\u793a\u5f53\u524d\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u6df1\u5ea6\uff0c\u5047\u5982 ",(0,a.kt)("inlineCode",{parentName:"li"},"res.length")," \u503c\u4e3a 2\uff0c\u8868\u793a\u5934\u4e24\u5c42\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u62ff\u5230\u4e86\u6700\u53f3\u4fa7\u7684\u503c\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u5982\u679c\u6709\u5bf9\u7b2c\u4e8c\u5c42\u7684\u5176\u4ed6\u8282\u70b9\u8fdb\u884c\u904d\u5386\uff0c\u5c31\u8df3\u8fc7\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"step")," \u8bb0\u5f55\u6bcf\u6b21 ",(0,a.kt)("inlineCode",{parentName:"li"},"dfs")," \u65f6\u7684\u6df1\u5ea6\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var rightSideView = function (root) {\n  // dfs\n  if (!root) return [];\n  const res = [];\n  \n  dfs(root, 0);\n  \n  // params: \u5f53\u524d\u7ed3\u70b9\u3001\u7ed3\u70b9\u6240\u5728\u5c42\u6570\n  function dfs(node, level) {\n    // \u8fb9\u754c\n    if(!node) return;\n\n    // \u5c42\u6570\u76f8\u540c\u5c31push\n    if (level === res.length) {\n      res.push(node.val);      \n    }\n    // \u9012\u5f52\n    dfs(node.right, level + 1);\n    dfs(node.left, level + 1);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"637-\u4e8c\u53c9\u6811\u7684\u5c42\u5e73\u5747\u503c"},"637. \u4e8c\u53c9\u6811\u7684\u5c42\u5e73\u5747\u503c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/average-of-levels-in-binary-tree/"},"637. \u4e8c\u53c9\u6811\u7684\u5c42\u5e73\u5747\u503c")),(0,a.kt)("li",{parentName:"ul"},"0423, easy, quick"),(0,a.kt)("li",{parentName:"ul"},"\u5e7f\u5ea6\u4f18\u5148")),(0,a.kt)("p",null,"\u6c42\u5e73\u5747\u503c\u7528\u5230\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"reduce")," \u8981\u719f\u6089 ",(0,a.kt)("inlineCode",{parentName:"p"},"reduce")," \u7684\u8bed\u6cd5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"prev")," \u662f\u4e0a\u4e00\u6b21 callback \u7684\u8fd4\u56de\u503c\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u7ec8\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"li"},"prev"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u6709 initialValue\n// \u4ece 0 \u5f00\u59cb\u904d\u5386\uff0c\u591a\u5faa\u73af\u4e00\u6b21\u3002\n// \u5faa\u73af\u7b2c\u4e00\u6b21 preV \u7684\u503c\u662f initV\uff1b\n//          curV \u7684\u503c\u662f Array[0]\uff0c\n//          item \u7684\u503c\u662f 0\nArray.reduce((preV, curV, item) => {\n  return preV + curV\n}, initV);\n\n// \u6ca1\u6709 initialValue\n// \u4ece 1\u5f00\u59cb\u904d\u5386\uff0c\n// \u5faa\u73af\u7b2c\u4e00\u6b21 preV \u7684\u503c\u662f Array[0]\uff1b\n//          curV \u7684\u503c\u662f Array[1]\uff1b\n//                  item \u7684\u503c\u662f 1\uff1b\n")),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e00\u5e7f\u5ea6\u4f18\u5148"},"\u89e3\u6cd5\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var averageOfLevels = function (root) {\n  // \u5c42\u5e8f\u904d\u5386\n  if (!root) return [];\n\n  const quene = [root];\n  const res = [];\n\n  while(quene.length) {\n    const levelVal = [];\n    const levelLen = quene.length;\n    for (let i = 0; i < levelLen; i++) {\n      // shift <=========< push\n      const node = quene.shift();\n      levelVal.push(node.val);\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    // \u6c42\u5e73\u5747\u503c\n    const total = levelVal.reduce((acc, cur) => acc + cur, 0);\n    const average = levelVal.length;\n    res.push(total/average);\n  }\n\n  return res;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u6570\u7ec4\u904d\u5386\u4e00\u8fb9\uff0cO(n)"),(0,a.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"quene\u3001res\uff1a O(1)\uff1b"),(0,a.kt)("li",{parentName:"ul"},"levelVal\u3001levelLen\uff1aO(n)\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u603b\u4f53\u7a7a\u95f4\u590d\u6742\u5ea6\u4f9d\u8d56\u4e8e\u6811\u7684\u6df1\u5ea6\uff0c\u4e3a O(n)\uff1b")))),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148-1"},"\u89e3\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6211\u7684\u601d\u8def\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7528 \u300c\u6df1\u5ea6\u4f18\u5148\u300d\uff0c\u904d\u5386\u51fa\u4e00\u4e2a \u300c\u5e7f\u5ea6\u4f18\u5148\u300d\uff1b"),(0,a.kt)("li",{parentName:"ul"},"levelVal \u662f\u4e00\u4e2a\u4e8c\u4f4d\u6570\u7ec4\uff0c\u5176\u6210\u5458\u662f\u4e00\u4e2a\u5e26\u5c42\u7ea7\u7684\u5e7f\u5ea6\u4f18\u5148\u5e8f\u5217\u7ed3\u679c\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5982\u4e00\u4e2a\u6570\u662f\uff1a","[3, 9, 20, 15, 7]","\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"levelVal")," \u503c\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"[[3], [9, 20], [15, 7]]"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  // DFS\nvar averageOfLevels = function (root) {\n  if (!root) return [];\n\n  const res = [];\n  // \u4e8c\u4f4d\u6570\u7ec4\uff1a<node.val[]>[]\uff0c\u8be5\u6570\u7ec4\u7684\u6210\u5458\u662f\u6bcf\u4e00\u5c42\u7684\u7ed3\u70b9\u503c\u3002\n  // \u4e5f\u5c31\u662f\u4e00\u4e2a\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u51fa\u7684\u7ed3\u679c\n  const levelVal = [];\n  dfs(root, 0)\n\n  function dfs(node, level) {\n    // \u8fb9\u754c\n    if (!node) return;\n\n    // \u6570\u7ec4\u957f\u5ea6 > \u5c42\u6570\uff0c\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u8be5\u5c42\uff0c\u53ef\u4ee5\u76f4\u63a5push\uff1b\u53cd\u4e4b\u6ca1\u5b9a\u4e49\u8fc7\uff0c\u5148\u5b9a\u4e49\u518dpush\n    // \u6700\u5f00\u59cb\u662f\u7b2c0\u5c42\uff0clevelVal.length = 1\uff1b\n    levelVal.length > level ? levelVal[level].push(node.val) : levelVal.push([node.val]);\n\n    dfs(node.left, level + 1);\n    dfs(node.right, level + 1);\n  }\n\n  // \u6c42\u6bcf\u5c42\u7684\u5e73\u5747\u503c\n  levelVal.forEach(item => {\n    const average = item.reduce((acc, cur) => acc + cur, 0) / item.length;\n    res.push(average);\n  })\n  return res;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e8b\u5b9e\u4e0a\u6ca1\u5fc5\u8981\u8bb0\u5f55\u6bcf\u4e00\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u503c\uff0c\u800c\u53ea\u9700\u8981\u5bf9\u503c\u8fdb\u884c\u7d2f\u52a0\u5373\u53ef\uff0c\u8fd9\u6837\u4e4b\u7ef4\u62a4\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"levelTotal"),": \u6bcf\u5c42\u7ed3\u70b9\u7684\u503c\u7684\u603b\u6570 ",(0,a.kt)("inlineCode",{parentName:"li"},"total")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"levelCount"),"\uff1a\u6bcf\u5c42\u7ed3\u70b9\u7684\u4e2a\u6570 ",(0,a.kt)("inlineCode",{parentName:"li"},"count"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var averageOfLevels = function (root) {\n  // DFS\n  if (!root) return [];\n\n  const res = [];\n  const levelTotal = [];\n  const levelCount = [];\n\n  dfs(root, 0)\n\n  function dfs(node, level) {\n    // \u8fb9\u754c\n    if (!node) return;\n\n    // \u6700\u5f00\u59cb\u662f\u7b2c0\u5c42\uff0clevelTotal.length = 1\uff1b\n    // \u7b2ci\u5c42\u65f6\uff0clevelTotla.length = i+1\n    levelTotal[level] ? levelTotal[level] += node.val : levelTotal[level] = node.val;\n    levelCount[level] ? levelCount[level] += 1 : levelCount[level] = 1;\n\n    dfs(node.left, level + 1);\n    dfs(node.right, level + 1);\n  }\n\n  // \u6c42\u6bcf\u5c42\u7684\u5e73\u5747\u503c\n  levelTotal.forEach((item, index) => {\n    res.push(item / levelCount[index]);\n  })\n\n  return res;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6240\u6709\u8282\u70b9\u53ea\u904d\u5386\u4e00\u8fb9\uff0cO(n)\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u53ea\u7ef4\u62a4 3 \u4e2a\u6570\u7ec4\uff0c O(1)\u3002")),(0,a.kt)("h2",{id:"429-n-\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},"429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/"},"429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0423, mid, quick")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5c42\u5e8f\u904d\u5386"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var levelOrder = function(root) {\n  // bfs\n  if (!root) return [];\n\n  const quene = [root];\n  const res = [];\n\n  while(quene.length) {\n    const levelLen = quene.length;\n    const levelRes = [];\n    for (let i = 0; i < levelLen; i++) {\n      // shift <=====< push\n      const node = quene.shift();\n      levelRes.push(node.val);\n\n      // \u904d\u5386n\u53c9\u5b50\u8282\u70b9\n      if (node.children) {\n        node.children.forEach( item => {\n          quene.push(item);\n        })\n      }\n    }\n    res.push(levelRes);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"515-\u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c"},"515. \u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/"},"515. \u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0423\uff0cmid\uff0cquick")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u548c 637 \u627e\u5e73\u5747\u6570\u4e00\u6837\uff0cbfs\u3001dfs \u90fd\u53ef\u4ee5\u5b9e\u73b0"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"BFS")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var largestValues = function (root) {\n  // bfs\n  if (!root) return [];\n\n  const quene = [root];\n  const res = [];\n\n  while (quene.length) {\n    let levelRes = -Infinity;\n    const levelLen = quene.length;\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      levelRes = Math.max(levelRes, node.val);\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    res.push(levelRes);\n  }\n  return res;\n};\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"DFS")),(0,a.kt)("p",null,"\u6ce8\u610f\u4e24\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"res \u4fdd\u5b58\u4e86\u6bcf\u5c42\u7684\u6700\u5927\u503c\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5728\u521d\u59cb\u5316\u5224\u65ad ",(0,a.kt)("inlineCode",{parentName:"li"},"res[level]")," \u662f\u5426\u5b58\u5728\u65f6\uff0c\u4e0d\u80fd\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"res[level]")," \u5224\u65ad\uff0c\u5fc5\u987b\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"res[level] !== undefined")," \uff0c\u56e0\u4e3a\u5f53 ",(0,a.kt)("inlineCode",{parentName:"li"},"res[level]")," \u7684\u503c\u4e3a 0 \u65f6\uff0c\u4e5f\u4f1a\u5224\u65ad\u4e3a ",(0,a.kt)("strong",{parentName:"li"},"\u4e0d\u5b58\u5728"),"\uff0c \u8fd4\u56de false\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var largestValues = function (root) {\n  // dfs\n  if (!root) return [];\n\n  const res = [];\n  dfs(root, 0);\n\n  // \u5f53\u524d\u8282\u70b9\uff0c\u6df1\u5ea6\n  function dfs(node, level) {\n    // \u8fb9\u754c\n    if (!node) return;\n    // \u7b2c 1 \u5c42\u65f6\uff0clevel = 0, res.length = 1;\n    // \u7b2c n \u5c42\u65f6\uff0clevel = n-1, res.length = n;\n    // \u521d\u59cb\u5316\n    if (res[level] !== undefined) {\n      res[level] = Math.max(res[level], node.val);\n    } else {\n      res[level] = node.val\n    }\n    // \u6216\u8005\u8fd9\u6837\uff1a\n    // res[level] = res[level] === undefined ? node.val : Math.max(res[level], node.val);\n\n    dfs(node.left, level + 1);\n    dfs(node.right, level + 1);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"116-\u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488"},"116. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/"},"116. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488")),(0,a.kt)("li",{parentName:"ul"},"0423\uff0cmid\uff0cquick answer"),(0,a.kt)("li",{parentName:"ul"},"\u5e7f\u5ea6\u4f18\u5148\u904d\u5386")),(0,a.kt)("p",null,"\u95ee\u9898\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8fd9\u9053\u9898\u521a\u5f00\u59cb\u5e72\u6270\u6211\u7684\u662f\u8fd4\u56de\u503c\uff0c\u5176\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de ",(0,a.kt)("strong",{parentName:"li"},"\u6574\u4e2a\u6811"),"\uff0c\u5373 ",(0,a.kt)("strong",{parentName:"li"},"\u6839\u7ed3\u70b9 root"),"\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6ce8\u610f\u5728\u6700\u7ec8 return\uff0c\u548c\u521a\u5f00\u59cb\u7684\u7279\u6b8a\u503c return\uff0c\u90fd\u662f\u8fd4\u56de root\u3002")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var connect = function (root) {\n  if (!root) return root;       // \u6ce8\u610f\u8fd9\u91cc\u662freturn rook\uff0c\u4e0d\u662f return []\n\n  // bfs\n  const quene = [root];\n\n  while (quene.length) {\n    const levelLen = quene.length;\n    // \u8bb0\u5f55\u4e0a\u4e00\u4e2a\u8282\u70b9\n    let lastNode = null;\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      // \u5982\u679c\u4e0a\u4e00\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\uff08\u8bf4\u660e\u662f\u6bcf\u5c42\u5f00\u5934\u7b2c\u4e00\u4e2a\uff09\uff0c\u5219\u4e0d\u6267\u884c next \u8d4b\u503c\n      if (lastNode) {\n        lastNode.next = node;\n      }\n      lastNode = node;\n            // \u9012\u5f52\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n    // \u5bf9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9.next\u8d4b\u503c\u4e3anull\n    lastNode.next = null;\n  }\n\n  return root;\n};\n")),(0,a.kt)("h2",{id:"117-\u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488-ii"},"117. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488 II"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/"},"117. \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488 II")),(0,a.kt)("li",{parentName:"ul"},"0424\uff0cmid\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"BFS"),(0,a.kt)("li",{parentName:"ul"},"\u540c\u4e0a\u4e00\u9053\u9898 116 \u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u5199\u7684\u66f4\u7cbe\u70bc\u4e86\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// BFS\nvar connect = function(root) {\n  if (!root) return root;\n\n  const quene  = [root];\n  while (quene.length) {\n    const len = quene.length;\n    let lastNode = null;\n    for (let i = 0; i < len; i++) {\n      const node = quene.shift();\n      if (i !== 0) lastNode.next = node;\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n      lastNode = node;\n    }\n    lastNode.next = null;\n  }\n  return root;\n};\n")),(0,a.kt)("h4",{id:"\u4f18\u5316\u5185\u5b58\u4f18\u5316"},"\u4f18\u5316\uff1a\u5185\u5b58\u4f18\u5316"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7528\u4e09\u4e2a\u6307\u9488\u7701\u53bb\u961f\u5217\u7684\u7ef4\u62a4")),(0,a.kt)("p",null,"\u6838\u5fc3\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7b2ci\u5c42\uff1a\u5df2\u7ecf\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"li"},".next")," \u5efa\u7acb\u8054\u7cfb\uff0c\u5f62\u6210\u4e00\u4e2a\u94fe\u8868\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u7b2ci+1\u5c42\uff1a\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"li"},".left")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},".right")," \u4e0e\u4e0a\u5c42\u94fe\u8868\u5efa\u7acb\u8054\u7cfb\uff0c\u5229\u7528\u4e0a\u5c42\u94fe\u8868\uff0c\u628a ",(0,a.kt)("inlineCode",{parentName:"li"},"i+1")," \u5c42\u4e5f\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"li"},".next")," \u5173\u8054\u8d77\u6765\u3002")),(0,a.kt)("p",null,"\u53d8\u91cf\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start"),"\uff1a\u7b2ci\u5c42\u94fe\u8868\u7684\u5f00\u59cb\u7ed3\u70b9\uff1b\n",(0,a.kt)("inlineCode",{parentName:"li"},"nextStart"),"\uff1a\u4e0b\u4e00\u4e2a\u94fe\u8868\u7684\u5f00\u59cb\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u7b2ci+1\u5c42\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\uff09\uff1b\n",(0,a.kt)("inlineCode",{parentName:"li"},"lastNode"),"\uff1a\u6267\u884c\u904d\u5386\u65f6\uff0c\u7b2ci+1\u5c42\u5b50\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u7ed3\u70b9")),(0,a.kt)("p",null,"\u6ce8\u610f\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e00\u4e2a\u53d8\u91cf\u90fd\u6709\u751f\u547d\u5468\u671f\uff1a\u5b9a\u4e49\u3001\u6bcf\u6b21\u5faa\u73af\u7684\u521d\u59cb\u5316\u3001\u6bcf\u6b21\u5faa\u73af\u7ed3\u675f\u7684\u91cd\u7f6e\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var connect = function(root) {\n  if (!root) return root;\n  // \u53d8\u91cf\uff1a\u7b2ci\u5c42\u94fe\u8868\u7684\u5f00\u59cb\u7ed3\u70b9\uff1b\u4e0b\u4e00\u4e2a\u94fe\u8868\u7684\u5f00\u59cb\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u7b2ci+1\u5c42\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\uff09\uff1b\u6267\u884c\u904d\u5386\u65f6\uff0c\u7b2ci+1\u5c42\u5b50\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u7ed3\u70b9\n  // \u6839\u7ed3\u70b9\u662f\u7b2c\u4e00\u4e2a\u94fe\u8868\n  let start = root;\n  let nextStart = null;\n  let lastNode = null;\n\n  while(start !== null) {\n    // \u904d\u5386\u7b2ci\u5c42\u94fe\u8868\n    for (let node = start; node !== null; node = node.next) {\n      // \u628a\u5b50\u8282\u70b9\uff08i+1\u5c42\uff09\u90fd\u5173\u8054\u8d77\u6765\n      node.left && connectNextPoint(node.left);\n      node.right && connectNextPoint(node.right);\n    }\n\n    // \u91cd\u7f6e\u53d8\u91cf\uff1a\u786e\u5b9a\u4e0b\u4e00\u8f6e\u94fe\u8868\u7684\u5f00\u5934\n    start = nextStart;\n    nextStart = null;\n    lastNode = null;\n  }\n\n  function connectNextPoint(node){\n    // \u7ed1\u5b9anextStart\n    if(nextStart === null) nextStart = node;\n    // \u4e0elastNode\u94fe\u63a5\n    if(lastNode !== null) lastNode.next = node;\n    lastNode = node;\n  }\n\n  return root;\n};\n")),(0,a.kt)("h2",{id:"104-\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"},"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/"},"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,a.kt)("li",{parentName:"ul"},"0424\uff0ceasy\uff0canswer")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u6df1\u5ea6\u4f18\u5148"},"\u65b9\u6cd5\u4e00\uff1a\u6df1\u5ea6\u4f18\u5148"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u81ea\u5df1\u6784\u9020\u590d\u6742\u4e86\uff0c\u76f4\u63a5\u9012\u5f52 ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth")," \u81ea\u8eab\u5c31\u53ef\u4ee5\u3002\u56e0\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth")," \u7684\u8fd4\u56de\u503c\u65e2\u662f\u6211\u4eec\u8981\u5b9a\u4e49\u7684\u9012\u5f52\u51fd\u6570\u7684\u503c\uff0c\u53c8\u662f\u6700\u7ec8\u7684\u8fd4\u56de\u503c\u3002\u6240\u4ee5\u5c31\u628a ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth")," \u76f4\u63a5\u6539\u9020\u6210\u9012\u5f52\u51fd\u6570\u5c31\u53ef\u4ee5\u3002\u4e0d\u9700\u8981\u518d ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth")," \u4e2d\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function (root) {\n  if (!root) return root;\n\n  // \u9012\u5f52\uff1a\u83b7\u5f97\u5de6\u5b50\u6811\u6700\u5927\u6df1\u5ea6\n  const leftLevel = maxDepth(root.left);\n  // \u9012\u5f52\uff1a\u83b7\u5f97\u53f3\u5b50\u6811\u6700\u5927\u6df1\u5ea6\n  const rightLevel = maxDepth(root.right);\n  // \u8fd4\u56de\uff1a\u672c\u7ed3\u70b9\u6700\u5927\u6df1\u5ea6 = \u5b50\u6811\u6700\u5927\u6df1\u5ea6 + 1\n  return Math.max(leftLevel, rightLevel) + 1;\n};\n")),(0,a.kt)("p",null,"\u81ea\u5df1\u6700\u521d\u7684\u65b9\u6cd5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth")," \u53c8\u5b9a\u4e49\u4e86\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"li"},"dfs"),"\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function (root) {\n  // dfs\n  if (!root) return root;\n\n  let maxLevel = 1;\n  dfs(root, maxLevel);\n  return maxLevel;\n\n  function dfs(node, level) {\n    if (node === null) return null;\n    maxLevel = Math.max(maxLevel, level);\n    dfs(node.left, level + 1);\n    dfs(node.right, level + 1);\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u5e7f\u5ea6\u4f18\u5148"},"\u65b9\u6cd5\u4e8c\uff1a\u5e7f\u5ea6\u4f18\u5148"),(0,a.kt)("p",null,"\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"deep")," \u8868\u793a\u904d\u5386\u7684\u5c42\u6570\uff0cbfs \u7684\u7279\u70b9\u662f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u5f53 ",(0,a.kt)("inlineCode",{parentName:"li"},"while")," \u5faa\u73af\u4e00\u6b21\uff0c\u5219\u904d\u5386\u5c42\u6570\u52a0\u6df1\u4e00\u6b21\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u5f53 ",(0,a.kt)("inlineCode",{parentName:"li"},"for")," \u5faa\u73af\u4e00\u6b21\uff0c\u5219\u4fbf\u5229\u540c\u4e00\u5c42\u7684\u4e00\u4e2a\u8282\u70b9\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function (root) {\n  if (!root) return root;\n\n  const quene = [root];\n  let deep = 0;\n\n  while(quene.length) {\n    const levelLen = quene.length;\n    deep += 1;\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n  }\n  return deep;\n};\n")),(0,a.kt)("h2",{id:"111-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"},"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/"},"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6")),(0,a.kt)("li",{parentName:"ul"},"0424\uff0ceasy\uff0cquick")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u5e7f\u5ea6\u4f18\u5148-bfs"},"\u65b9\u6cd5\u4e00\uff1a\u5e7f\u5ea6\u4f18\u5148 bfs"),(0,a.kt)("p",null,"\u7262\u8bb0\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"while")," \u5faa\u73af\u662f\u5c42\u7ea7\u7684\uff0c\u6bcf\u4e00\u6b21 ",(0,a.kt)("inlineCode",{parentName:"li"},"while")," \u5faa\u73af\u90fd\u662f\u5bf9\u4e00\u5c42\u7684\u8bbf\u95ee\uff1b"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"for")," \u5faa\u73af\u662f\u7ed3\u70b9\u7ea7\u7684\uff0c\u6bcf\u4e00\u6b21 ",(0,a.kt)("inlineCode",{parentName:"li"},"for")," \u5faa\u73af\u662f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u8bbf\u95ee\uff1b")),(0,a.kt)("p",null,"\u672c\u9898\u8981\u627e\u6700\u5c0f\u6df1\u5ea6\uff1a\u201c\u6df1\u5ea6\u201d \u5c31\u662f tree \u4e2d\uff0c\u4ece ",(0,a.kt)("strong",{parentName:"p"},"\u6839\u7ed3\u70b9")," \u5230\u4efb\u610f\u4e00\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"\u53f6\u5b50\u7ed3\u70b9")," \u7684\u5c42\u7ea7\u6570\u3002\u6700\u5c0f\u6df1\u5ea6\u5c31\u662f\u8fd9\u4e9b\u6df1\u5ea6\u4e2d\u6700\u5c0f\u7684\u4e00\u4e2a\u3002"),(0,a.kt)("p",null,"\u6240\u4ee5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"while")," \u8bb0\u5f55 \u201c\u6df1\u5ea6\u201d \u6570\u636e\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"for")," \u68c0\u6d4b\u662f\u5426\u8bbf\u95ee\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u4e00\u65e6\u8bbf\u95ee\u5230\uff08\u6ca1\u6709\u5de6\u53f3\u5b50\u6811\uff09\uff0c\u5c31\u627e\u5230\u4e86\u6700\u5c0f\u6df1\u5ea6\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var minDepth = function(root) {\n  // bfs\n  if (!root) return root;\n\n  const quene = [root];\n  let level = 0;\n\n  while(quene.length) {\n    const levelLen = quene.length;\n    level += 1;\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      if (!node.left && !node.right) return level;\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u6df1\u5ea6\u4f18\u5148-dfs"},"\u65b9\u6cd5\u4e8c\uff1a\u6df1\u5ea6\u4f18\u5148 dfs"),(0,a.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u51e0\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u5219\u8bbf\u95ee\u5230\u4e86\u4e00\u4e2a\u6df1\u5ea6\uff0c\u8fd4\u56de\u5c42\u7ea7 1\uff1b")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff1a"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u4e00\u4e2a\u5b50\u6811\u5b58\u5728\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u4e0d\u5b58\u5728\uff08\u4e3a null\uff09\u3002\u5219\u8be5\u5c42\u8282\u70b9\u7684\u5c42\u6570\uff0c\u53ea\u80fd\u53d6\u5b58\u5728\u7684\u5b50\u6811\u7684\u90a3\u4e2a\u503c\u3002"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8054\u60f3 ",(0,a.kt)("inlineCode",{parentName:"p"},"root = [2,null,3,null,4,null,5,null,6]")," \u7684\u60c5\u51b5\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u6240\u4ee5\uff0c\u628a\u5b50\u6811\u4e0d\u5b58\u5728\u7684\u6df1\u5ea6\u503c\u53bb\u503c\u4e3a\u65e0\u7a77\u5927\uff0c\u6700\u7ec8\u8fd4\u56de\u7684\u5c31\u662f\u53e6\u4e00\u4e2a\u5b58\u5728\u6df1\u5ea6\u7684\u5b50\u6811\u503c\u4e86\u3002 ")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u4e24\u4e2a\u5b50\u6811\u90fd\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b50\u6811\u6df1\u5ea6\u503c\u7684\u66f4\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var minDepth = function (root) {\n    // \u5f53\u524d\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de null\n  if (!root) return null;\n  // \u53f6\u5b50\u7ed3\u70b9\n  if (!root.left && !root.right) return 1;\n\n  const leftDepth = minDepth(root.left) ?? Infinity;\n  const rightDepth = minDepth(root.right) ?? Infinity;\n\n\n  return Math.min(leftDepth, rightDepth) + 1;\n};\n")),(0,a.kt)("h2",{id:"226-\u7ffb\u8f6c\u4e8c\u53c9\u6811"},"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/invert-binary-tree/"},"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811")),(0,a.kt)("li",{parentName:"ul"},"0424\uff0ceasy\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u8003\u70b9\uff1a\u9012\u5f52+\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u90fd\u8981\u4f1a\u3002")),(0,a.kt)("p",null,"\u6df1\u5ea6\u4f18\u5148\u9012\u5f52\u7684\u601d\u8003\u65b9\u5f0f\uff0c\u662f\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u7ffb\u8f6c\uff0c\u9010\u5c42\u6700\u540e\u6839\u7ed3\u70b9\u8fdb\u884c\u7ffb\u8f6c\uff1b"),(0,a.kt)("p",null,"\u5e7f\u5ea6\u4f18\u5148\u8fed\u4ee3\u7684\u601d\u8003\u65b9\u5f0f\uff0c\u662f\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\u7ffb\u8f6c\uff0c\u9010\u5c42\u6700\u540e\u53f6\u5b50\u7ed3\u70b9\u8fdb\u884c\u7ffb\u8f6c\uff1b"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u603b\u7ed3\uff1a")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6df1\u5ea6\u4f18\u5148\u3001\u9012\u5f52\uff0c\u505a\u9898\u7684\u601d\u8003\u65b9\u5f0f\u662f\u81ea\u4e0b\u800c\u4e0a\u7684\uff1b"),(0,a.kt)("li",{parentName:"ol"},"\u5e7f\u5ea6\u4f18\u5148\uff0c\u8fed\u4ee3\uff0c\u505a\u9898\u7684\u601d\u8003\u65b9\u5f0f\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\uff1b")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00dfs-\u9012\u5f52"},"\u65b9\u6cd5\u4e00\uff1adfs \u9012\u5f52"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e24\u4e2a\u52a8\u4f5c\uff1a"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5de6\u3001\u53f3\u5b50\u6811\u4ea4\u6362\u4f4d\u7f6e\uff1b")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5de6\u3001\u53f3\u5b50\u6811\u5404\u81ea\u53cd\u8f6c\u5176\u5b50\u6811\uff1b")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8fd4\u56de\u8be5\u8282\u70b9\u3002")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u6ce8\u610f\u9012\u5f52\u8fb9\u754c\uff0c\u5f53\u904d\u5386\u5230\u53f6\u5b50\uff0c\u5219\u8fd4\u56de null\uff1b"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var invertTree = function (root) {\n  if(!root) return null;\n  const tempNode = root.left;\n  root.left = invertTree(root.right);\n  root.right = invertTree(tempNode);\n  return root;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8cbfs-\u8fed\u4ee3"},"\u65b9\u6cd5\u4e8c\uff1abfs \u8fed\u4ee3"),(0,a.kt)("p",null,"\u5982\u679c\u6ca1\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"for"),"\uff0c\u53ea\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"while"),"\u3002\u5219\u6bcf\u4e00\u6b21 while \u5faa\u73af\u90fd\u662f\u4e00\u4e2a\u7ed3\u70b9\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var invertTree = function (root) {\n  // bfs\n  if(!root) return root;\n\n  const quene = [root];\n  while (quene.length) {\n    const node = quene.shift();\n    // exchange\n    [node.left, node.right] = [node.right, node.left];\n    node.left && quene.push(node.left);\n    node.right && quene.push(node.right);\n  }\n  return root\n};\n")),(0,a.kt)("h2",{id:"144-\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"},"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/"},"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0ceasy\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u4e09\u79cd\u65b9\u6cd5\uff1a\u9012\u5f52\u3001\u8fed\u4ee3\u3001\u901a\u7528\u8fed\u4ee3")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var preorderTraversal = function(root) {\n  if (!root) return [];\n\n  const res = [];\n  dfs(root)\n  return res;\n\n  function dfs(node){\n    if (!node) return null;\n    // \u6839\u3001\u5de6\u3001\u53f3\n    res.push(node.val);\n    dfs(node.left)\n    dfs(node.right)\n    return null\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3"),(0,a.kt)("p",null,"\u6808\u7ed3\u6784\u76f4\u63a5\u89e3\u51b3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var preorderTraversal = function(root) {\n  if (!root) return [];\n\n  const stack = [root];\n  const res = [];\n  while (stack.length) {\n    // \u4e2d\n    const node = stack.pop();\n    res.push(node.val);\n    // \u53f3\n    node.right && stack.push(node.right);\n    // \u5de6\n    node.left && stack.push(node.left);\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09\u901a\u7528\u8fed\u4ee3"},"\u65b9\u6cd5\u4e09\uff1a\u901a\u7528\u8fed\u4ee3"),(0,a.kt)("p",null,"\u5bf9\u7ed3\u70b9\u7684\u904d\u5386\u5206\u4e3a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8bbf\u95ee\uff1a\u5de6\u5b50\u6811\u3001\u672c\u8282\u70b9 + ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"\u3001\u53f3\u5b50\u6811\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8bfb\u53d6\uff1a\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," \u540e\u7684\u7ed3\u70b9\uff0c\u8bfb\u53d6\u5176\u503c\uff1b")),(0,a.kt)("p",null,"\u6bcf\u6b21\u8bbf\u95ee\u5230\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6309\u7167\u904d\u5386\u987a\u5e8f\u5bf9 \u5de6\u5b50\u6811\u3001\u7ed3\u70b9\u672c\u8eab(\u503c)\u3001\u53f3\u5b50\u6811\u8fdb\u884c\u8bbf\u95ee\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"stack.push"),"\uff09\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4f46\u6ce8\u610f\u7684\u662f\uff0c\u8bbf\u95ee\u503c\u7684\u65f6\u5019\uff0c\u518d\u989d\u5916 ",(0,a.kt)("inlineCode",{parentName:"li"},"push")," \u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," \u6807\u660e\u4e0b\u6b21\u8981\u8bfb\u53d6\u5176\u503c\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var preorderTraversal = function (root) {\n  if (!root) return [];\n  const stack = [root];\n  const res = [];\n\n  stack.push();\n  \n  while (stack.length) {\n    // \u6bcf\u6b21\u5faa\u73af\u62ff\u51fa\u6808\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\n    const point = stack.pop();\n    if (point === null) {\n      // \u5982\u679c\u662f null\uff0c\u5219\u8981\u8bfb\u53d6\u6808\u4e2d\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n      res.push(stack.pop().val);\n    } else {\n      // \u5982\u679c\u4e0d\u662f null\uff0c\u5219\u8bbf\u95ee\u8fd9\u4e2a\u8282\u70b9\uff1aleft/right/val\uff0c\u4f9d\u6b21 push\uff1b\n      point.right && stack.push(point.right); // \u53f3\n      point.left && stack.push(point.left);   // \u5de6\n      stack.push(point);    // \u6839\n      stack.push(null);         // \u6839\u7684\u5c3e\u5df4\n    }\n  }\n  return res\n}\n")),(0,a.kt)("h2",{id:"145-\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"},"145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-postorder-traversal/"},"145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386")),(0,a.kt)("li",{parentName:"ul"},"0425, easy, quick"),(0,a.kt)("li",{parentName:"ul"},"\u4e09\u79cd\u65b9\u6cd5\uff1a\u9012\u5f52\u3001\u8fed\u4ee3\u3001\u7edf\u4e00\u8fed\u4ee3")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52-1"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var postorderTraversal = function(root) {\n  const res = []\n  if (!root) return res;\n  dfs(root);\n\n  function dfs(node){\n    node.left && dfs(node.left);  // \u5de6\n    node.right && dfs(node.right); // \u53f3\n    res.push(node.val); // \u6839\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-1"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var postorderTraversal = function(root) {\n  const res = [];\n  if (!root) return res;\n  const stack = [root];\n  \n  while(stack.length) {\n    const node = stack.pop();\n    res.push(node.val);     // \u6839\n    node.left && stack.push(node.left);  // \u5de6\n    node.right && stack.push(node.right); // \u53f3\n  }\n  // \u7ffb\u8f6c\u7ed3\u679c\n  return res.reverse();\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e09\u7edf\u4e00\u8fed\u4ee3"},"\u65b9\u5f0f\u4e09\uff1a\u7edf\u4e00\u8fed\u4ee3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var postorderTraversal = function (root) {\n  if (!root) return [];\n  const res = [];\n  const stack = [root];\n\n  while (stack.length) {\n    const point = stack.pop();\n    if (point === null) {\n      res.push(stack.pop().val);\n    } else {\n      // \u6839(null)\u3001\u53f3\u3001\u5de6      \n      stack.push(point);\n      stack.push(null);\n      point.right && stack.push(point.right);\n      point.left && stack.push(point.left);\n    }\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"94-\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386"},"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/"},"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u5e38\u89c4\u8fed\u4ee3\u7684\u89e3\u6cd5\u4e8c\u4e0d\u597d\u7406\u89e3\uff0c\u8981\u591a\u770b\u770b")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003\uff1a",(0,a.kt)("a",{parentName:"li",href:"https://github.com/youngyangyang04/leetcode-master/blob/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%BB%9F%E4%B8%80%E8%BF%AD%E4%BB%A3%E6%B3%95.md"},"\u4e8c\u53c9\u6811\u7684\u7edf\u4e00\u8fed\u4ee3\u6cd5.md"))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u4e2d\u5e8f\u904d\u5386-\u8fed\u4ee3",src:t(38455).Z,width:"526",height:"354"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u4e2d\u5e8f\u904d\u5386",src:t(83704).Z,width:"530",height:"472"})),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52-2"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52"),(0,a.kt)("p",null,"\u7565\uff0c\u89c1 144. / 145. \u9898\u3002"),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-2"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3"),(0,a.kt)("p",null,"\u7528 point \u6307\u5411\u8981\u53d6\u503c\u7684\u7ed3\u70b9\uff0c\u6808\u7ed3\u6784\u6765\u7ef4\u62a4\u8981\u904d\u5386 ",(0,a.kt)("strong",{parentName:"p"},"\u5de6\u5b50\u6811")," \u7ed3\u70b9\uff1b"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e00\u76f4\u5f80\u6808\u4e2d\u538b\u5165\u5de6\u5b50\u6811\uff0c\u4e00\u65e6\u9047\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u5219\u8bc1\u660e\u8be5\u5206\u652f\u5df2\u7ecf\u5230\u5934\uff1b",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5224\u65ad\u662f\u5426\u4e3a\u53f6\u5b50\u7ed3\u70b9\u7684\u4f9d\u636e\uff1a\u5f53 point \u6307\u5411\u4e86 null\uff0c\u5219\u8bf4\u660e\u904d\u5386\u5df2\u7ecf\u5230\u5934\u4e86\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u6b64\u65f6\u8bfb\u53d6\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\uff0c\u7136\u540e\u5f80\u6808\u4e2d\u538b\u5165\u53f3\u5b50\u6811\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var inorderTraversal = function (root) {\n  if (!root) return [];\n  const res = [];\n  const stack = [];  // stack \u4e0d\u9884\u5148\u653e\u5165root\uff0cstack\u672a\u6765\u53ea\u4f1a\u653e\u5165.left\u7684\u7ed3\u70b9\n  let point = root;\n\n  while (stack.length || point) {\n    if (point !== null) {\n      // \u904d\u5386\u5de6\u5b50\u6811\n      stack.push(point);    // \u8fd9\u91ccpush(point)\uff0c\u4e0d\u662fpush(cur.point)\n      point = point.left;\n\n    } else {\n      point = stack.pop()\n      res.push(point.val);\n      point = point.right\n    }\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09\u7edf\u4e00\u8fed\u4ee3"},"\u65b9\u6cd5\u4e09\uff1a\u7edf\u4e00\u8fed\u4ee3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var inorderTraversal = function (root) {\n  if (!root) return [];\n  const res = [];\n  const stack = [root];\n\n  while (stack.length) {\n    const point = stack.pop();\n    // \u53d6\u503c\n    if (point === null) {\n      res.push(stack.pop().val);\n      continue;\n    }\n    // \u8bbf\u95ee\n    point.right && stack.push(point.right);\n    stack.push(point);\n    stack.push(null);\n    point.left && stack.push(point.left);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"101-\u5bf9\u79f0\u4e8c\u53c9\u6811"},"101. \u5bf9\u79f0\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/symmetric-tree/"},"101. \u5bf9\u79f0\u4e8c\u53c9\u6811")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u5bf9\u79f0\u4e8c\u53c9\u6811 ---\x3e \u5e73\u8861\u4e8c\u53c9\u6811")),(0,a.kt)("p",null,"\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u5224\u65ad\u7ed3\u70b9\uff0c\u4e0d\u662f\u4e00\u4e2a\u7ed3\u70b9\u6811\u4e3a 3 \u7684\u6700\u5c0f\u6811\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"a",src:t(84361).Z,width:"380",height:"374"})),(0,a.kt)("p",null,"\u800c\u662f\u4e00\u4e2a\u7ed3\u70b9\u6570\u4e3a 7 \u7684\u6811\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"b",src:t(89957).Z,width:"810",height:"622"})),(0,a.kt)("p",null,"\u53ea\u6709\u5224\u65ad\u7b2c\u4e09\u5c42 ","[3, 4, 4, 3]"," \u5bf9\u79f0\uff0c\u624d\u53ef\u4ee5\u51b3\u5b9a\u8be5\u7ed3\u70b9\u662f\u5426\u5bf9\u79f0\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8fb9\u754c\u95ee\u9898\uff1a")),(0,a.kt)("p",null,"\u4ee5 root \u4e3a\u5224\u65ad\u7684\u6839\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u70b9\u624d\u53ef\u4ee5\u51b3\u5b9a\u5e73\u8861\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\u5b58\u5728"),"\u3002root \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u5b58\u5728\u6027\uff0c ",(0,a.kt)("inlineCode",{parentName:"li"},"root.left"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"root.right")," \uff08\u5bf9\u5e94\u56fe\u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"2"),"\uff09\uff1b",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"root \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u5b58\u5728\uff0c\u5219\u8be5 root \u4e3a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5e73\u8861\uff1b"),(0,a.kt)("li",{parentName:"ol"},"root \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u53e6\u4e00\u4e2a\u5b58\u5728\uff0c\u4e0d\u5e73\u8861\uff1b"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\u4e24\u4e2a\u503c\u76f8\u7b49"),"\u3002root \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u503c ",(0,a.kt)("inlineCode",{parentName:"li"},"root.left.val"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"root.right.val")," \uff08\u5bf9\u5e94\u56fe\u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"2"),"\uff09\uff1b ",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u503c\u76f8\u7b49\uff0c\u5219\u5e73\u8861\uff1b\u4e0d\u76f8\u7b49\uff0c\u5219\u4e0d\u5e73\u8861\uff1b"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\u56db\u4e2a\u5b50\u6811\u5e73\u8861"),"\u3002root \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u5b50\u6811\uff1a\n",(0,a.kt)("inlineCode",{parentName:"li"},"root.left.left"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"root.left.right"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"root.right.left"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"root.right.right"),"\uff1b",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"inSide")," \u5185\u4fa7\u9012\u5f52\u5224\u65ad\u662f\u5426\u5e73\u8861\uff1b"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"outSide")," \u5916\u4fa7\u9012\u5f52\u5224\u65ad\u662f\u5426\u5e73\u8861\uff1b")))),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52-3"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  if (!root) return false;\n  // \u9012\u5f52 dfs\n  // \u5224\u65ad\u662f\u5426\u5e73\u8861\n  return compare(root.left, root.right);\n  \n  function compare(leftNode, rightNode) {\n    // \u8fb9\u754c\u95ee\u9898\n    // \u53f6\u5b50\u7ed3\u70b9\uff0c\u5230\u5934\u4e86\uff0c\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u8fd4\u56de true\n    if (leftNode === null && rightNode === null) return true;\n    // \u6709\u4e00\u8fb9\u7a7a\uff0c\u53e6\u4e00\u8fb9\u4e0d\u7a7a\uff0c\u80af\u5b9a\u4e0d\u5e73\u8861\n    if ((leftNode === null && rightNode !== null) || (leftNode !== null && rightNode === null)) return false;\n\n    // \u5224\u65ad\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u662f\u5426\u5e73\u8861\uff1b\n    if (leftNode.val !== rightNode.val) return false;\n    // \u9012\u5f52\uff1a\u5224\u65ad\u5b50\u6811\u662f\u5426\u5e73\u8861\uff1a\n    // \u5185\u4fa7\uff1a\u5de6\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u3001\u53f3\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\n    // \u5916\u4fa7\uff1a\u5de6\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u3001\u53f3\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\n    const inSide = compare(leftNode.right, rightNode.left);\n    const outSide = compare(leftNode.left, rightNode.right);\n    return inSide && outSide;\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u6808\u8fed\u4ee3"},"\u65b9\u6cd5\u4e8c\uff1a\u6808\u8fed\u4ee3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u56e0\u4e3a\u9012\u5f52\u5c31\u662f\u5229\u7528\u4e86\u51fd\u6570\u7684\u8c03\u7528\u6808\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u5df1\u7ef4\u62a4\u4e00\u4e2a \u201c\u8c03\u7528\u6808\u201d\uff0c\u5c31\u628a\u9012\u5f52\u6539\u9020\u6210\u4e86\u8fed\u4ee3\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u90fd\u662f\u4e00\u6b21\u62ff\u51fa\u6765\u4e24\u4e2a\uff0c\u7136\u540e\u6bd4\u8f83\u662f\u5426\u5bf9\u79f0\uff0c\u6240\u4ee5\u961f\u5217\u548c\u6808\u7684\u6548\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6ce8\u610f\uff1a\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u662f\u540e\u8fdb\u5148\u51fa\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6240\u4ee5\u4e00\u6b21\u53d6\u4e24\u4e2a\u7ed3\u70b9\u7684\u65f6\u5019 (",(0,a.kt)("inlineCode",{parentName:"li"},"left"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"right"),")\uff0c\u987a\u5e8f\u4f1a\u4e0d\u4e00\u6837 (\u6ce8\u91ca)\uff0c\u5176\u4ed6\u903b\u8f91\u5b8c\u5168\u76f8\u540c\u3002")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  if (!root) return false;\n  const stack = [];\n  stack.push(root.right);\n  stack.push(root.left);\n\n  while (stack.length) {\n    // \u26a0\ufe0f \u6ce8\u610f\u548c\u961f\u5217\u5bf9\u6bd4\u53d6\u51fa\u7684\u987a\u5e8f\n    const rightNode = stack.pop();\n    const leftNode = stack.pop();\n\n    // \u5b58\u5728\n    if (leftNode === null && rightNode === null) continue;\n    if ((leftNode === null && rightNode !== null) || \n              (leftNode !== null && rightNode === null)) return false;\n    // \u4e24\u4e2a\u503c\u76f8\u7b49\n    if (leftNode.val !== rightNode.val) return false;\n        // \u201c\u9012\u5f52\u201d \u56db\u4e2a\u5b50\u6811\u5e73\u8861\n    stack.push(leftNode.right, rightNode.left);\n    stack.push(leftNode.left, rightNode.right);\n  }\n  return true;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09\u961f\u5217\u8fed\u4ee3"},"\u65b9\u6cd5\u4e09\uff1a\u961f\u5217\u8fed\u4ee3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  if (!root) return false;\n  const quene = [];\n  quene.push(root.left);\n  quene.push(root.right);\n\n  while (quene.length) {\n    // \u26a0\ufe0f \u6ce8\u610f\u548c\u6808\u5bf9\u6bd4\u53d6\u51fa\u7684\u987a\u5e8f\n    const left = quene.shift();\n    const right = quene.shift();\n    // \u5b58\u5728\n    if (left === null && right === null) continue;\n    if (left !== null && right === null || left === null && right !== null) return false;\n    // \u4e24\u4e2a\u503c\u76f8\u7b49\n    if (left.val !== right.val) return false;\n    // \u56db\u4e2a\u5b50\u6811\u5e73\u8861\n    quene.push(left.left, right.right);\n    quene.push(left.right, right.left);\n  }\n  return true;\n};\n")),(0,a.kt)("h2",{id:"559-n-\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"},"559. N \u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/maximum-depth-of-n-ary-tree/"},"559. N \u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0ceasy\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u601d\u8def\u89c1\uff1a104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00bfs-\u8fed\u4ee3"},"\u65b9\u6cd5\u4e00\uff1abfs \u8fed\u4ee3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function(root) {\n    if (!root) return root;\n    const quene = [root];\n    let depth = 0;\n\n    while (quene.length) {\n      const levelLen = quene.length;\n      for (let i = 0; i < levelLen; i++) {\n        const node = quene.shift();\n        // \u5faa\u73af\u904d\u5386n\u53c9\u6811\n        if (node.children) {\n          node.children.forEach(item => {\n            quene.push(item);\n          })\n        }\n      }\n      depth += 1;\n    }\n    return depth;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8cdfs-\u9012\u5f52"},"\u65b9\u6cd5\u4e8c\uff1adfs \u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function (root) {\n  // dfs\n  if (!root) return root;\n  let maxDepth = 0;\n  dfs(root, 1);\n\n  function dfs(node, level) {\n    maxDepth = Math.max(maxDepth, level);\n    if (node.children) {\n      node.children.forEach(item => dfs(item, level + 1));\n    }\n  }\n\n  return maxDepth;\n};\n\n// \u7cbe\u7b80\u4ee3\u7801\uff1a\n// \u76f4\u63a5\u628a maxDepth \u4f5c\u4e3a\u9012\u5f52\u51fd\u6570\u3002\u6bcf\u8c03\u7528\u4e00\u6b21\uff0cdepth+1\nvar maxDepth = function (root) {\n  if (!root) return root;\n  let depth = 0;\n\n  if (root.children) {\n    root.children.forEach(item => depth = Math.max(depth, maxDepth(item)));\n  }\n  return depth + 1;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09dfs-\u8fed\u4ee3"},"\u65b9\u6cd5\u4e09\uff1adfs \u8fed\u4ee3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u8f6c\u5316\u4e3a\u8fed\u4ee3\uff0c\u5c31\u662f\u628a\u5bf9\u5e94\u7684\u51fd\u6570\u51fd\u6570\u8c03\u7528\u6808\u5b9e\u73b0\uff0c\u5728\u6808\u4fdd\u5b58\u4e86\u7528\u5230\u7684\u53c2\u6570\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"node")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"level"),"\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function (root) {\n  // dfs\n  if (!root) return root;\n  let maxDepth = 0;\n  const stack = [{ node: root, level: 1 }];\n\n  while (stack.length) {\n    const {node, level} = stack.pop();\n    maxDepth = Math.max(maxDepth, level);\n    if (node.children) {\n      node.children.forEach(item => stack.push({ node: item, level: level + 1 }));\n    }\n  }\n\n  return maxDepth;\n};\n")),(0,a.kt)("h2",{id:"222-\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570"},"222. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/count-complete-tree-nodes/"},"222. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0cmid\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u65b9\u6cd5\u4e8c\u5229\u7528\u4e86\u9898\u76ee\u7279\u70b9\uff0c\u8fd9\u79cd\u89e3\u9898\u601d\u8def\u8981\u5b66\u4e60\u4e00\u4e0b")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00dfs"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var countNodes = function(root) {\n  return dfs(root);\n\n  function dfs(node){\n    if (!node) return 0;\n    return dfs(node.left) + dfs(node.right) + 1;\n  }\n};\n\n// \u9012\u5f52\u51fd\u6570dfs\uff1a\u662f\u4e0b\u9762\u8fd9\u4e2a\u7248\u672c\u7684\u7b80\u5316\nfunction dfs(node){\n  // \u7ed3\u70b9\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de 0\n  if (!node) return 0;\n  // \u7ed3\u70b9\u5b58\u5728\uff0c\u8fd4\u56de\u505a\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7ed3\u70b9\u603b\u548c + 1\n  const leftNum = dfs(node.left);\n  const rightNum = dfs(node.right);\n  return leftNum + rightNum + 1\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,a.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(log n)\uff0c\u7b97\u4e0a\u4e86\u9012\u5f52\u7cfb\u7edf\u6808\u5360\u7528\u7684\u7a7a\u95f4")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7279\u70b9"},"\u65b9\u6cd5\u4e8c\uff1a\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7279\u70b9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var countNodes = function(root) {\n  // \u53f6\u5b50\u7ed3\u70b9\n  if (!root) return 0;\n  // \u5982\u679c\u662f\u6ee1\u4e8c\u53c9\u6811\uff1a\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811... \u548c \u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811... \u6df1\u5ea6\u76f8\u7b49\uff1b\n  let [leftDepth, rightDepth] = [0, 0];\n  let [leftNode, rightNode] = [root.left, root.right];\n  while (leftNode) {\n    leftDepth++;\n    leftNode = leftNode.left;\n  }\n  while (rightNode) {\n    rightDepth++;\n    rightNode = rightNode.right;\n  }\n  // \u6ee1\u4e8c\u53c9\u6811\uff1a node\u603b\u6570 = 2^\u5c42\u6570-1\n  if (leftDepth === rightDepth) return (2 << leftDepth ) - 1\n                                       // \u4e0d\u540c\u5199\u6cd5\uff1areturn (2 ** leftDepth )\n  // \u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811\uff1a\u9012\u5f52\u6c42\u5404\u81ea\u5b50\u6811\u7684node\u603b\u6570\n  return countNodes(root.left) + countNodes(root.right) + 1\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8ba1\u7b97\u6ee1\u4e8c\u53c9\u6811\u65f6\uff0c\u7528\u5230\u4e86\u4f4d\u79fb\u8fd0\u7b97\uff0c\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"** 2 "),"\uff0c\u4e5f\u53ef\u4ee5\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"3 << 1 // \u76f8\u5f53\u4e8e\uff1a3 * 2 ** 1 = 6\n3 << 4 // \u76f8\u5f53\u4e8e\uff1a3 * 2 ** 4 = 32\n2 << 3 // \u76f8\u5f53\u4e8e\uff1a2 * 2 ** 3\uff0c\u76f8\u5f53\u4e8e 2 ** 4\uff0c\u76f8\u5f53\u4e8e 2^4\n\n// \u5de6\u79fb1\u4f4d\u5c31\u662f\u6269\u59272\u500d\n// \u5de6\u79fb2\u4f4d\u5c31\u662f\u6269\u59274\u500d\n")))),(0,a.kt)("h2",{id:"110-\u5e73\u8861\u4e8c\u53c9\u6811"},"110. \u5e73\u8861\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/balanced-binary-tree/"},"110. \u5e73\u8861\u4e8c\u53c9\u6811")),(0,a.kt)("li",{parentName:"ul"},"0425\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u5e73\u8861\u4e8c\u53c9\u6811\u5b9a\u4e49\uff0c\u540e\u5e8f\u904d\u5386")),(0,a.kt)("p",null,"\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u5b9a\u4e49\u4e3a\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u4e00\u4e2a\u4e8c\u53c9\u6811",(0,a.kt)("em",{parentName:"p"},"\u6bcf\u4e2a\u8282\u70b9")," \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1 ")),(0,a.kt)("p",null,"\u67d0\u4e2a\u7ed3\u70b9\u7684\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9ad8\u5ea6\uff1a\u4ece\u53f6\u5b50\u7ed3\u70b9\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u6df1\u5ea6\uff1a\u4ece\u6839\u7ed3\u70b9\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1b")),(0,a.kt)("p",null,"\u6c42\u9ad8\u5ea6\uff0c\u81ea\u5e95\u5411\u4e0a\u7684\u904d\u5386\uff0c\u6240\u4ee5\u91c7\u7528\u540e\u5e8f\u904d\u5386\uff08\u5de6\u3001\u53f3\u3001\u6839\uff09"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003\u6587\u7ae0\uff1a",(0,a.kt)("a",{parentName:"li",href:"https://github.com/youngyangyang04/leetcode-master/blob/master/problems/0110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.md"},"\u5e73\u8861\u4e8c\u53c9\u6811.md"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'var isBalanced = function(root) {\n  // \u9012\u5f52\n  return getNodeDepth(root) === -1 ? false : true;\n\n  function getNodeDepth(node){\n    //\u8fb9\u754c\uff0c\u904d\u5386\u5230\u8fb9\u754c\uff0c\u8fd4\u56de\u9ad8\u5ea60\n    if (!node) return 0;  \n  \n    //\u5206\u522b\u83b7\u5f97\u5de6\u3001\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\uff0c\u5982\u679c\u8fd4\u56de\u4e86 -1 \u8868\u660e"\u5b50\u6811"\u4e0d\u662f\u5e73\u8861\u6811\uff0c\u672c\u6811\u4e5f\u4e0d\u662f\uff0c\u76f4\u63a5\u8fd4\u56de -1\uff1b\n    let leftDepth = getNodeDepth(node.left);\n    if (leftDepth === -1) return -1;\n    let rightDepth = getNodeDepth(node.right);\n    if (rightDepth === -1) return -1;\n    \n    //\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u6811\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u9ad8\u5ea6\u5dee\uff0c\u5982\u679c <=1\uff0c\u5219\u8fd4\u56de\uff1a\u66f4\u9ad8\u7684\u5b50\u6811+1\uff0c\u5426\u5219\u8fd4\u56de -1\n    return Math.abs(leftDepth - rightDepth) > 1 \n        ? -1 \n            : Math.max(leftDepth, rightDepth) + 1;\n  }\n};\n')),(0,a.kt)("h2",{id:"257-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84"},"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-paths/"},"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84")),(0,a.kt)("li",{parentName:"ul"},"0426\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u5148\u5e8f\u904d\u5386\u7684\u8fed\u4ee3/\u9012\u5f52")),(0,a.kt)("p",null,"\u660e\u767d\u4ec0\u4e48\u65f6\u5019\u7528\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5148\u5e8f\u904d\u5386\uff1a\u5728\u81ea\u9876\u5411\u4e0b\u7684\u904d\u5386\u4e2d\uff0c\u9700\u8981\u83b7\u5f97\u904d\u5386\u8fc7\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u4fe1\u606f\uff1b",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5982\uff1a\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84\uff0c\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6\u7b49\u7b49\uff1b"))),(0,a.kt)("li",{parentName:"ul"},"\u540e\u5e8f\u904d\u5386\uff1a\u5728\u81ea\u9876\u5411\u4e0b\u7684\u904d\u5386\u4e2d\uff0c\u83b7\u5f97\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u7684\u4fe1\u606f\uff1b",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5982\uff1a\u4e8c\u53c9\u6811\u7684\u5168\u90e8\u53f6\u5b50\u7ed3\u70b9\u7684\u9ad8\u5ea6\uff0c\u5224\u65ad\u5e73\u8861\u4e8c\u53c9\u6811\u7b49\u7b49\uff1b")))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"c",src:t(32508).Z,width:"940",height:"820"})),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52\u56de\u6eaf"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52+\u56de\u6eaf"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9012\u5f52\u7684\u51fd\u6570\uff1a\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3002",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u53c2\u6570\uff1a\u672c\u6b21\u9012\u5f52\u8282\u70b9\u3001\u672c\u6761\u8def\u5f84 path\u3001\u7ed3\u679c\u6570\u7ec4 result\uff1b"))),(0,a.kt)("li",{parentName:"ol"},"\u9012\u5f52\u7684\u8fd4\u56de\u6761\u4ef6\u3002",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u5f53\u9012\u5f52\u5230\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u65f6\u8fd4\u56de\u3002\u6b64\u65f6\u628a\u7ed3\u679c push \u5230 result \u4e2d\u3002"))),(0,a.kt)("li",{parentName:"ol"},"\u9012\u5f52 + \u56de\u8d4e",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u9012\u5f52\uff1a\u5f53\u8be5\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u5b58\u5728\u5de6\u3001\u53f3\u5b50\u6811\u7684\u65f6\u5019\uff0c\u9012\u5f52\u7684\u5411\u4e0b\u63a2\u5bfb\u8def\u5f84\uff1b"),(0,a.kt)("li",{parentName:"ol"},"\u56de\u8d4e\uff1a\u5f53\u904d\u5386\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u5219\u7ed3\u675f\u8be5\u6761\u8def\u5f84\u904d\u5386\u3002\u5411\u4e0a\u56de\u6eaf\u5230\u7236\u8282\u70b9\uff0c\u904d\u5386\u4e0b\u4e00\u4e2a\u5b50\u6811\u7684\u8def\u5f84\u3002")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003\u6587\u7ae0\uff1a",(0,a.kt)("a",{parentName:"li",href:"https://github.com/youngyangyang04/leetcode-master/blob/master/problems/0257.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84.md"},"\u4e8c\u53c9\u6811\u7684\u6240\u4ee5\u8def\u5f84.md"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var binaryTreePaths = function (root) {\n  if (!root) return [];\n  const result = []\n  traversal(root, '', result)\n\n  // \u9012\u5f52\n  function traversal(node, path, result) {\n    // \u8fb9\u754c\uff1a\u53f6\u5b50\u8282\u70b9,path \u5199\u5165 result\n    if (node.left === null && node.right === null) {\n      respath = (path + '->' + node.val).substr(2)\n      result.push(respath);\n    }\n    //\u9012\u5f52+\u56de\u6eaf\n    node.left && traversal(node.left, path + '->' + node.val, result);\n    node.right && traversal(node.right, path + '->' + node.val, result);\n  }\n  return result;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"substr")," \u83b7\u5f97\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u53c2\u65701: \u5b50\u4e32\u5f00\u5934\uff0c\u53c2\u65702: \u5b50\u4e32\u7684\u957f\u5ea6\uff1b")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-3"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7528 stack \u4ee3\u66ff\u51fd\u6570\u8c03\u7528\u6808\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var binaryTreePaths = function (root) {\n  if (!root) return [];\n  // \u8fed\u4ee3\uff1a\u7528 stack \u4ee3\u66ff\u51fd\u6570\u9012\u5f52\uff1a\u4fdd\u5b58 {node + path}\n  const stack = [];\n  const result = []\n\n  stack.push({ node: root, path: '' });\n\n  // \u904d\u5386\n  while (stack.length) {\n    const { node, path } = stack.pop();\n    // \u8fb9\u754c\uff1a\u53f6\u5b50\u8282\u70b9,path \u5199\u5165 result\n    if (node.left === null && node.right === null) {\n      respath = (path + '->' + node.val).substr(2);\n      result.push(respath);\n    }\n    //\u6ce8\u610f\u8c03\u7528\u987a\u5e8f\uff0c\u56e0\u4e3a\u6808\u7684\u7279\u6027\uff0c\u987a\u5e8f\u4e0e\u9012\u5f52\u76f8\u53cd\uff1a\n    node.right && stack.push({ node: node.right, path: path + '->' + node.val });\n    node.left && stack.push({ node: node.left, path: path + '->' + node.val });\n  }\n  return result;\n};\n")),(0,a.kt)("h2",{id:"100-\u76f8\u540c\u7684\u6811"},"100. \u76f8\u540c\u7684\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/same-tree/"},"100. \u76f8\u540c\u7684\u6811")),(0,a.kt)("li",{parentName:"ul"},"0426\uff0ceasy\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u548c\u5bf9\u79f0\u4e8c\u53c9\u6811\u7c7b\u4f3c")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e00\u9012\u5f52-dfs"},"\u65b9\u5f0f\u4e00\uff1a\u9012\u5f52 dfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var isSameTree = function(p, q) {\n  // \u9012\u5f52\uff1a\u5148\u5e8f\u904d\u5386\n  return compare(p, q)\n\n  function compare(p, q){\n    // \u8fb9\u754c\n    // \u7ed3\u70b9\u90fd\u4e0d\u5b58\u5728 / \u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\n    if (p === null && q === null) return true;\n    if (p === null || q === null) return false;\n    \n    // \u7ed3\u70b9\u503c\n    if (p.val !== q.val) return false;\n    // \u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\n    if (p.left === null && p.right === null && q.left === null && q.right === null) return true;\n    // \u9012\u5f52\n    const left = compare(p.left, q.left);\n    const right = compare(p.right, q.right);\n    return left && right\n  }\n};\n\n// \u4f18\u5316\u4e00\u4e0b\uff1a\nvar isSameTree = function (p, q) {\n  // \u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\n  if (p === null && q === null) return true;\n  // \u6709\u4e00\u4e2a\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u6709\u4e00\u4e2a\u662f\u53f6\u5b50\u7ed3\u70b9\n  if (p === null || q === null) return false;\n  // \u503c\u4e0d\u76f8\u7b49\n  if (p.val !== q.val) return false;\n  // \u9012\u5f52\uff1a\u5224\u65ad\u5b50\u6811\n  return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n};\n\n// \u8fd8\u80fd\u4f18\u5316\uff1a\n\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-bfs"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3 bfs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e5f\u53ef\u4ee5\u4f7f\u7528 dfs \u8fed\u4ee3\uff0c\u5c31\u662f\u6362\u6210\u4e86 stack \u7ed3\u6784\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6ce8\u610f\uff1a\u5728\u5bf9\u9012\u5f52\u8fdb\u884c\u6539\u9020\u65f6\uff0c\u8981\u6ce8\u610f\u589e\u52a0\u56de\u6eaf\u903b\u8f91\uff1a\u4ee5\u5f80\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"return true")," \u5168\u90e8\u6539\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"continue"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u8fd9\u662f\u56e0\u4e3a\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"true")," \u53ea\u5224\u65ad\u4e86\u5f53\u524d\u8282\u70b9\u7b26\u5408\u4e86\u76f8\u7b49\u903b\u8f91\uff0c\u4f46\u5176\u4f59\u8282\u70b9\u5c1a\u672a\u904d\u5386\uff0c\u8fd8\u4e0d\u786e\u5b9a\u662f\u5426\u76f8\u7b49\u3002\u6240\u4ee5\u8981\u56de\u6eaf\u5230\u7236\u8282\u70b9\uff0c\u5bf9\u5176\u4ed6\u5206\u652f\u8fdb\u884c\u904d\u5386\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u8981\u628a\u6240\u6709\u7684\u5206\u652f\u90fd\u904d\u5386\u5e76\u5224\u65ad\u4e00\u904d\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"continue"),"\uff1a\u672c\u8f6e\u5faa\u73af\u5df2\u7ecf\u53ef\u4ee5\u786e\u5b9a\u8282\u70b9\u76f8\u7b49\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\uff08\u4e5f\u4e0d\u80fd\uff09\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\u4e86\u3002")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var isSameTree = function (p, q) {\n  // \u7528\u5c42\u5e8f\u904d\u5386\uff08quene\uff09\u548c\u5148\u5e8f\u904d\u5386\uff08stack\uff09\u8fed\u4ee3\u4e5f\u53ef\u4ee5\n  if (!p && !q) return true;\n  const quene = [{ leftNode: p, rightNode: q }];\n\n  while (quene.length) {\n    const { leftNode, rightNode } = quene.shift();\n    // \u8fb9\u754c\n    // \u7ed3\u70b9\u90fd\u4e0d\u5b58\u5728 / \u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\n    if (leftNode === null && rightNode === null) continue;  //\u6ce8\u610f\uff0c\u4e0d\u662freturn true\n    if (leftNode === null || rightNode === null) return false;\n\n    // \u7ed3\u70b9\u503c\n    if (leftNode.val !== rightNode.val) return false;\n    // \u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\n    if (\n      leftNode.left === null && leftNode.right === null\n      && rightNode.left === null && rightNode.right === null\n    ) continue;  //\u6ce8\u610f\uff0c\u4e0d\u662freturn true\n    // \u5224\u65ad\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u662f\u5426\u76f8\u7b49\n    quene.push({ leftNode: leftNode.left, rightNode: rightNode.left })\n    quene.push({ leftNode: leftNode.right, rightNode: rightNode.right })\n  }\n  return true;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/sum-of-left-leaves/"},"404. \u5de6\u53f6\u5b50\u4e4b\u548c")),(0,a.kt)("li",{parentName:"ul"},"0426\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u5de6\u53f6\u5b50\u5b9a\u4e49\u9700\u8981\u660e\u767d")),(0,a.kt)("p",null,"\u5de6\u53f6\u5b50\u7684\u5b9a\u4e49\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u4e14\u5de6\u8282\u70b9\u6ca1\u6709\u5de6\u53f3\u5b69\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u8282\u70b9\u5c31\u662f\u5de6\u53f6\u5b50\u3002")),(0,a.kt)("p",null,"\u5de6\u53f6\u5b50\u7684\u5224\u65ad\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"\u5de6\u8282\u70b9, \u53f3\u8282\u70b9"),"\u5747\u4e3a\u7a7a\uff0c\u5219\u4e3a\u4e00\u4e2a\u5de6\u53f6\u5b50\u3002")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u9012\u5f52-dfs"},"\u65b9\u6cd5\u4e00\uff1a\u9012\u5f52 dfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var sumOfLeftLeaves = function(root) {\n  let res = 0;\n  if (!root) return res;\n  dfs(root);\n  \n  function dfs(node) {\n    if (!node) return \n    // \u5982\u679c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u7684 `\u5de6\u8282\u70b9, \u53f3\u8282\u70b9` \u5747\u4e3a\u7a7a\uff0c\u5219\u4e3a\u4e00\u4e2a\u5de6\u53f6\u5b50\u3002\n    if (node.left && !node.left.left && !node.left.right) {\n      res += node.left.val;\n    }\n    node.left && dfs(node.left);\n    node.right && dfs(node.right);\n  }\n  return res\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u8fed\u4ee3-bfs-1"},"\u65b9\u6cd5\u4e8c\uff1a\u8fed\u4ee3 bfs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8fed\u4ee3\u7528 dfs \u4e5f\u53ef\u4ee5\uff0c\u7528 stack \u7ed3\u6784\uff0c\u6ce8\u610f\u5de6\u53f3\u5b50\u8282\u70b9 push \u7684\u987a\u5e8f\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var sumOfLeftLeaves = function(root) {\n  let res = 0;\n  if (!root) return res;\n  const quene = [root];\n\n  while (quene.length) {\n    const node = quene.shift();\n    if (!node) continue;\n\n    // \u5982\u679c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u7684 `\u5de6\u8282\u70b9, \u53f3\u8282\u70b9` \u5747\u4e3a\u7a7a\uff0c\u5219\u4e3a\u4e00\u4e2a\u5de6\u53f6\u5b50\u3002\n    if (node.left && !node.left.left && !node.left.right) {\n      res += node.left.val;\n    }\n    node.left && quene.push(node.left);\n    node.right && quene.push(node.right);\n  }\n  return res\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09\u8fed\u4ee3-dfs"},"\u65b9\u6cd5\u4e09\uff1a\u8fed\u4ee3 dfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var sumOfLeftLeaves = function(root) {\n  let res = 0;\n  if (!root) return res;\n  const stack = [root];\n\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node) continue;\n\n    // \u5982\u679c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u8be5\u8282\u70b9\u7684\u5de6\u8282\u70b9\u7684 `\u5de6\u8282\u70b9, \u53f3\u8282\u70b9` \u5747\u4e3a\u7a7a\uff0c\u5219\u4e3a\u4e00\u4e2a\u5de6\u53f6\u5b50\u3002\n    if (node.left && !node.left.left && !node.left.right) {\n      res += node.left.val;\n    }\n    node.right && stack.push(node.right);  // \u53f3\uff1a\u987a\u5e8f\u98a0\u5012\n    node.left && stack.push(node.left);    // \u5de6\n  }\n  return res\n};\n")),(0,a.kt)("h2",{id:"513-\u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c"},"513. \u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/find-bottom-left-tree-value/"},"513. \u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c")),(0,a.kt)("li",{parentName:"ul"},"0426\uff0cmid\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52 dfs \u6709\u70b9\u5fd8\u8bb0\u4e86\uff0c\u89c1\uff1a104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,a.kt)("p",null,"\u26a0\ufe0f \u6ce8\u610f\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"if (i === 0)")," \u6211\u5199\u6210\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"if (i = 0)")," \u770b\u4e86\u597d\u4e45\u6ca1\u53d1\u73b0\uff0c\u81ea\u5df1\u9700\u8981\u6ce8\u610f\u4e86\uff0c\u522b\u7c97\u5fc3\u3002"),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u8fed\u4ee3-bfs"},"\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3 bfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var findBottomLeftValue = function (root) {\n  // bfs\n  let res = NaN;\n  if (!root) return res;\n  const quene = [root];\n\n  while (quene.length) {\n    const levelLen = quene.length;\n    for (let i = 0; i < levelLen; i++) {\n      const node = quene.shift();\n      if (i === 0) res = node.val;    // \u5224\u65ad\u4e2d\u6211\u5199\u6210\u4e86 `1 = 0`\n      node.left && quene.push(node.left);\n      node.right && quene.push(node.right);\n    }\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u9012\u5f52-dfs"},"\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52 dfs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u627e\u6df1\u5ea6\u6700\u6df1\u7684\u5b50\u8282\u70b9\u3001\u524d\u5e8f\u904d\u5386\uff08\u786e\u4fdd\u662f\u6700\u5de6\u8fb9\u7684\uff09")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var findBottomLeftValue = function (root) {\n  // dfs \u6df1\u5ea6\n  if (!root) return 0;\n  let resLevel = 0;\n  let res = null;\n  dfs(root, 1);\n\n  function dfs(node, level) {\n    // \u53f6\u5b50\u7ed3\u70b9\u5224\u65ad\u6df1\u5ea6\uff1a\n    if (!node.left && !node.right) {\n      if (level > resLevel) {\n        resLevel = level\n        res = node.val;\n      }\n    }\n    node.left && dfs(node.left, level + 1);\n    node.right && dfs(node.right, level + 1);\n  }\n  return res;\n};\n")),(0,a.kt)("h2",{id:"112-\u8def\u5f84\u603b\u548c"},"112. \u8def\u5f84\u603b\u548c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/path-sum/"},"112. \u8def\u5f84\u603b\u548c")),(0,a.kt)("li",{parentName:"ul"},"0427\uff0ceasy\uff0cquick")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e00dfs-\u9012\u5f52"},"\u65b9\u5f0f\u4e00\uff1adfs \u9012\u5f52"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6d89\u53ca\u5230\u56de\u6eaf\u548c\u53ca\u65f6\u8fd4\u56de\uff0c\u4e00\u65e6\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u5c31\u505c\u6b62\u7ee7\u7eed\u904d\u5386\uff0c\u76f4\u63a5\u8fd4\u56de\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6240\u4ee5\u5bf9\u9012\u5f52\u8981 ",(0,a.kt)("strong",{parentName:"li"},"\u6709\u8fd4\u56de\u503c"),"\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var hasPathSum = function (root, targetSum) {\n  if (!root) return false;\n  // dfs\uff0c\u5148\u5e8f\n  return dfs(root, 0);\n\n  function dfs(node, lastSum) {\n    const curSum = lastSum + node.val;\n    // \u53f6\u5b50\u7ed3\u70b9\u5224\u65ad\n    if (!node.left && !node.right) {\n      return curSum === targetSum ? true : false;\n    }\n    if (node.left && dfs(node.left, curSum)) return true;\n    if (node.right && dfs(node.right, curSum)) return true;\n    return false;\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e8cdfs-\u8fed\u4ee3"},"\u65b9\u5f0f\u4e8c\uff1adfs \u8fed\u4ee3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e3b\u8981\u6d89\u53ca\u5230\u4e24\u4e2a\u66f4\u6539\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6808\u4e2d\u4fdd\u5b58\uff1a\u9012\u5f52\u7684\u4e24\u4e2a\u53c2\u6570\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u7684\u8fd4\u56de\u503c\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"true")," \u4e0d\u53d8\u7ee7\u7eed\u8fd4\u56de\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"false")," \u8c03\u6574\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"continue"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var hasPathSum = function (root, targetSum) {\n  if (!root) return false;\n  // dfs\uff0c\u5148\u5e8f\n  const stack = [{ node: root, count: 0 }];\n\n  while (stack.length) {\n    const { node, count } = stack.pop();\n    const curSum = count + node.val;\n    // \u53f6\u5b50\u7ed3\u70b9\n    if (!node.left && !node.right) {\n      if (curSum === targetSum) return true \n      continue;\n    }\n    node.right && stack.push({ node: node.right, count: curSum });\n    node.left && stack.push({ node: node.left, count: curSum });\n  }\n  return false;\n};\n")),(0,a.kt)("h2",{id:"113-\u8def\u5f84\u603b\u548c-ii"},"113. \u8def\u5f84\u603b\u548c II"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/path-sum-ii/"},"113. \u8def\u5f84\u603b\u548c II")),(0,a.kt)("li",{parentName:"ul"},"0427\uff0cmid\uff0cquick")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e00dfs-\u9012\u5f52-1"},"\u65b9\u5f0f\u4e00\uff1adfs \u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var pathSum = function (root, targetSum) {\n  const res = [];\n  if (!root) return res;\n  // dfs\n  dfs(root, 0, [])\n\n  function dfs(node, count, path) {\n    const curSum = count + node.val;\n    const curPath = [...path];\n    curPath.push(node.val);\n    // \u53f6\u5b50\u7ed3\u70b9\n    if (!node.left && !node.right) {\n      if (targetSum === curSum) res.push(curPath);\n      return\n    }\n    node.left && dfs(node.left, curSum, curPath);\n    node.right && dfs(node.right, curSum, curPath);\n  }\n  return res;\n};\n\n// \u663e\u5f0f\u56de\u6eaf\uff0c\u5c11\u4e00\u4e2a ...path \u7684\u590d\u5236\u64cd\u4f5c\uff0c\u63d0\u5347\u901f\u5ea6\nvar pathSum = function (root, targetSum) {\n  const res = [];\n  if (!root) return res;\n  // dfs\n  dfs(root, 0, []);\n  return res;\n\n  function dfs(node, count, path) {\n    const curSum = count + node.val;\n    path.push(node.val);\n    // \u53f6\u5b50\u7ed3\u70b9\n    if (!node.left && !node.right) {\n      if (targetSum === curSum) res.push([...path]);\n\n    }\n    node.left && dfs(node.left, curSum, path);\n    node.right && dfs(node.right, curSum, path);\n    path.pop();    // \u2757\ufe0f\u56de\u6eaf\n  }\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u5f0f\u4e8cbfs-\u8fed\u4ee3"},"\u65b9\u5f0f\u4e8c\uff1abfs \u8fed\u4ee3"),(0,a.kt)("p",null,"\u56de\u6eaf\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u662f\u628a\u5f53\u524d\u8282\u70b9\u72b6\u6001\u90fd\u5728 quene \u4e2d\u4fdd\u5b58\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\u603b\u6570\u503c\uff1acount\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\uff1apath\u3002\u6ce8\u610f path \u5728\u4fdd\u5b58\u65f6\u8981\u6d45\u62f7\u8d1d\u4e00\u4efd\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var pathSum = function (root, targetSum) {\n  const res = [];\n  if (!root) return res;\n  // bfs\n  const quene = [{ node: root, count: 0, path: [] }];\n\n  while (quene.length) {\n    const { node, count, path } = quene.shift();\n    const curCount = count + node.val;\n    const curPath = [...path];\n    curPath.push(node.val);\n    // \u53f6\u5b50\u7ed3\u70b9\uff1a\n    if (!node.left && !node.right) {\n      if (targetSum === curCount) res.push(curPath);\n    }\n    node.left && quene.push({ node: node.left, count: curCount, path: curPath });\n    node.right && quene.push({ node: node.right, count: curCount, path: curPath });\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09dfs-\u8fed\u4ee3--map-\u4f18\u5316\u5185\u5b58"},"\u65b9\u6cd5\u4e09\uff1adfs \u8fed\u4ee3 + map \u4f18\u5316\u5185\u5b58"),(0,a.kt)("p",null,"\u7528map\u5b58\u50a8\u8282\u7ea6\u5185\u5b58"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"key\u4e3a\u5f53\u524d\u8282\u70b9\uff0cvalue\u4e3a\u7236\u8282\u70b9\uff0c"),(0,a.kt)("li",{parentName:"ul"},"\u9700\u8981\u5728\u5b9a\u4e49\u540e\u521d\u59cb\u5316\u653e\u5165 ",(0,a.kt)("inlineCode",{parentName:"li"},"map.set(root, null)")),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6839\u8282\u70b9\u540e\uff0c\u53ef\u901a\u8fc7 while \u5faa\u73af\u5411\u4e0a\u67e5\u627e\uff0c\u5373\u53ef\u627e\u5230\u5b8c\u6574\u7684\u8def\u5f84\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var pathSum = function (root, targetSum) {\n    if (!root) return [];\n    // dfs \u8fed\u4ee3\n    const res = [];\n    const stack = [{ node: root, curSum: targetSum }];\n    // \u7528map\u5b58\u50a8\u8282\u7ea6\u5185\u5b58\uff0ckey\u4e3a\u5f53\u524d\u8282\u70b9\uff0cvalue\u4e3a\u7236\u8282\u70b9\uff0c\u901a\u8fc7while\u5faa\u73af\u5411\u4e0a\u67e5\u627e\uff0c\u5373\u53ef\u627e\u5230\u5b8c\u6574\u7684\u8def\u5f84\u3002\n    const map = new Map();\n    // \u521d\u59cb\u5316\u7236\u8282\u70b9\u6307\u5411null\n    map.set(root, null);\n    while (stack.length) {\n        let { node, curSum } = stack.pop();\n        curSum -= node.val;\n        if (!node.left && !node.right && curSum === 0) {\n            res.push(getPath(node));\n        }\n        if (node.right) {\n            map.set(node.right, node);\n            stack.push({ node: node.right, curSum });\n        }\n        if (node.left) {\n            map.set(node.left, node);\n            stack.push({ node: node.left, curSum });\n        }\n    }\n\n    // while\u5411\u4e0a\u67e5\u627e\u5b8c\u6574\u8def\u5f84\n    function getPath(node) {\n        const res = [];\n        while (node !== null) {\n            res.unshift(node.val);\n            node = map.get(node);\n        }\n        return res;\n    }\n    return res;\n};\n")),(0,a.kt)("h2",{id:"437-\u8def\u5f84\u603b\u548c-iii"},"437. \u8def\u5f84\u603b\u548c III"),(0,a.kt)("h2",{id:"\u9762\u8bd5\u9898-0412-\u6c42\u548c\u8def\u5f84"},"\u9762\u8bd5\u9898 04.12. \u6c42\u548c\u8def\u5f84"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/path-sum-iii/"},"437. \u8def\u5f84\u603b\u548c III")),(0,a.kt)("li",{parentName:"ul"},"\u9762\u8bd5\u9898 04.12. \u6c42\u548c\u8def\u5f84"),(0,a.kt)("li",{parentName:"ul"},"0427\uff0c0428\uff0cmid\uff0chard answer"),(0,a.kt)("li",{parentName:"ul"},"\u6df1\u5ea6\u4f18\u5148\uff0c\u6c42\u548c")),(0,a.kt)("p",null,"\u601d\u8def\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u8bb0\u5f55\u4ece root \u5230\u8fd9\u4e2a\u8282\u70b9\u904d\u5386\u8fc7\u7684\u6240\u6709\u503c\uff0c\u7528 path \u8bb0\u5f55\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u5f53\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5c31\u4ece\u8fd9\u4e2a\u8282\u70b9\u4e3a\u5e95\uff0c\u81ea\u4e0b\u800c\u4e0a\uff08\u4ece\u540e\u5f80\u524d\uff09\u7684\u8bfb\u53d6 path \u4e2d\u7684\u503c\uff0c\u4e0d\u65ad\u7d2f\u52a0\uff0c\u627e\u5230\u6240\u6709\u7d2f\u52a0\u503c === ",(0,a.kt)("inlineCode",{parentName:"li"},"sum")," \u7684\u60c5\u51b5\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u5c31\u8ba9\u7ed3\u679c ",(0,a.kt)("inlineCode",{parentName:"li"},"res")," + 1\uff1b"))),(0,a.kt)("li",{parentName:"ul"},"\u4e24\u4e2a\u91cd\u70b9\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6c42\u548c\u8def\u5f84\u4e2d\uff0c\u6709\u8d1f\u503c\u7684\u8282\u70b9\u3001\u4e0d\u4e00\u5b9a\u662f\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\uff0c\u4e0d\u4e00\u5b9a\u662f\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u7684\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u904d\u5386\u662f\u4ece\u4e0a\u5f80\u4e0b\uff0c\u800c\u6bcf\u904d\u5386\u4e00\u4e2a\u8282\u70b9\uff0c\u662f\u4ece\u4e0b\u5f80\u4e0a\u8ba1\u7b97\u7684\u3002\u76f8\u5f53\u4e8e\u628a\u53f6\u5b50\u7ed3\u70b9\u5f53\u6210\u4e86\u4e00\u4e2a\u7aef\u70b9\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u8def\u5f84\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u6ee1\u8db3\u7d2f\u52a0\u548c === sum \u7684\u60c5\u51b5\uff0c\u9700\u8981\u5168\u90e8\u8003\u8651\u5728\u5185\u3002")))),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u81ea\u5e95\u5411\u4e0a\u6c42\u548c\u81ea\u5df1\u7684\u65b9\u6cd5"},"\u65b9\u6cd5\u4e00\uff1a\u81ea\u5e95\u5411\u4e0a\u6c42\u548c\uff08\u81ea\u5df1\u7684\u65b9\u6cd5\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var pathSum = function (root, targetSum) {\n  let res = 0;\n  if (!root) return res;\n  dfs(root, []);\n  return res;\n\n\n  function dfs(node, path) {\n    // \u52a0\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u8ba1\u7b97\u5f53\u524d\u7684 path \u503c\n    const curPath = [...path, node.val];\n    let curSum = 0;\n    // \u4ece\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5f80\u524d\u5012\u7740\u904d\u5386\uff0c\u8ba1\u7b97\u6ee1\u8db3\u7684\u60c5\u51b5\n    for (let i = curPath.length - 1; i >= 0; i--) {\n      curSum += curPath[i];\n      // \u5982\u679c\u5f53\u524d path sum \u76f8\u7b49\uff0c\u65b9\u6cd5\u52a01\n      if (curSum === targetSum) res += 1;\n    }\n\n    node.left && dfs(node.left, curPath);\n    node.right && dfs(node.right, curPath);\n  }\n};\n")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1afor \u5faa\u73af\u4e00\u4e2a\uff0c\u9012\u5f52\u4e00\u4e2a\uff1aO(n^2)\uff1b"),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u7ef4\u62a4\u6570\u7ec4 path\uff0cO(n^2)\uff1b"),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u81ea\u9876\u5411\u4e0b\u6c42\u548c"},"\u65b9\u6cd5\u4e8c\uff1a\u81ea\u9876\u5411\u4e0b\u6c42\u548c"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/path-sum-iii/solution/lu-jing-zong-he-iii-by-leetcode-solution-z9td/"},"https://leetcode-cn.com/problems/path-sum-iii/solution/lu-jing-zong-he-iii-by-leetcode-solution-z9td/"))),(0,a.kt)("img",{src:"./images/\u4e8c\u53c9\u68111.assets/\u622a\u5c4f2022-04-28 \u4e0a\u534811.58.59.png",alt:"\u622a\u5c4f2022-04-28 \u4e0a\u534811.58.59"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u81ea\u5e95\u5411\u4e0a\u7684\u7f3a\u70b9\u662f\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e86\u4e00\u4e2a path \u6570\u7ec4\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u800c\u628a sum \u6bcf\u6b21\u89c1\u53bb val\uff0c\u7701\u53bb\u4e86\u7ef4\u62a4 path\uff0c\u800c\u4ec5\u4ec5\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u5b57\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u903b\u8f91\uff1a"),(0,a.kt)("li",{parentName:"ul"},"\u5047\u8bbe root \u5230 A \u7ed3\u70b9\u7684\u8def\u5f84\u548c\u4e3a targetSum\uff0c\u90a3\u4e48\u81ea\u7136 root \u4e0b\u4e00\u4e2a\u5b50\u7ed3\u70b9\u5230 A \u7ed3\u70b9\u7684\u8def\u5f84\u548c\u4e3a targetSum - 1\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// dfs\n// \u4ee5 root \u4e3a\u6839\u7ed3\u70b9\uff0c\u9012\u5f52\u904d\u5386\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5bf9\u8282\u70b9\u6c42rootSum\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u8282\u70b9\u6240\u6709\u6c42\u7684\u503c\u8fdb\u884c\u76f8\u52a0\u6c42\u548c\u8fd4\u56de\u3002\nvar pathSum = function (root, targetSum) {\n  if (!root)  return 0;\n\n    let ret = rootSum(root, targetSum);\n    ret += pathSum(root.left, targetSum);\n    ret += pathSum(root.right, targetSum);\n    return ret;\n  };\n\n  // dfs\uff0c\n  // \u4ee5 root \u4e3a\u6839\u7ed3\u70b9\uff0c\u5411\u4e0b\u904d\u5386\u6240\u6709\u8def\u5f84\uff0c\u8fd4\u56de\u6ee1\u8db3\u8def\u5f84\u548c\u4e3a targetSum \u7684\u603b\u6570\n  const rootSum = (root, targetSum) => {\n    let ret = 0;\n    if (root.val === targetSum) ret++;\n    // \u9012\u5f52\u903b\u8f91\uff1a\n    // \u5047\u8bberoot\u5230A\u7ed3\u70b9\u7684\u8def\u5f84\u548c\u4e3atargetSum\uff0c\u90a3\u4e48\u81ea\u7136root\u4e0b\u4e00\u4e2a\u5b50\u7ed3\u70b9\u5230A\u7ed3\u70b9\u7684\u8def\u5f84\u548c\u4e3a targetSum - 1\uff0c\n    ret += root.left ? rootSum(root.left, targetSum - root.val) : 0;\n    ret += root.right ? rootSum(root.right, targetSum - root.val) : 0;\n    return ret;\n  }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pathSum")," \u662f\u9012\u5f52\u4e8c\u53c9\u6811\u7684\u6240\u6709\u7ed3\u70b9\uff0c\u8ba9\u6bcf\u4e2a\u8282\u70b9\u90fd\u8c03\u7528\u4e00\u6b21 ",(0,a.kt)("inlineCode",{parentName:"li"},"rootSum"),"\uff0c\u7136\u540e\u7d2f\u52a0 ",(0,a.kt)("inlineCode",{parentName:"li"},"\trootSum")," \u7684\u8fd4\u56de\u503c\uff1b"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rootSum")," \u662f\u4ee5 ",(0,a.kt)("inlineCode",{parentName:"li"},"root")," \u4e3a\u6839\u7ed3\u70b9\uff0c\u9012\u5f52\u6240\u6709\u8def\u5f84\uff0c\u6c42\u8def\u5f84\u548c\u6ee1\u8db3 sum \u7684\u603b\u6570\u3002")),(0,a.kt)("p",null,"\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff1b\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9012\u5f52\u9700\u8981\u5728\u6808\u4e0a\u5f00\u8f9f\u7a7a\u95f4\u3002"),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09\u524d\u7f00\u548c"},"\u65b9\u6cd5\u4e09\uff1a\u524d\u7f00\u548c"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u53c2\u8003\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/path-sum-iii/solution/tong-ge-lai-shua-ti-la-qian-zhui-he-tu-j-trcq/"},"https://leetcode-cn.com/problems/path-sum-iii/solution/tong-ge-lai-shua-ti-la-qian-zhui-he-tu-j-trcq/"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u601d\u8003\uff0c\u4e3a\u4ec0\u4e48\u522b\u4eba\u7684\u89e3\u6790\u770b\u4e0d\u61c2\uff1f"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u81ea\u5df1\u6ca1\u6709\u53bb\u4e00\u6b65\u6b65\u843d\u5b9e\uff0c\u4e0d\u80fd\u5149\u770b\uff0c\u8981\u8fb9\u770b\u8fb9\u753b\u56fe\uff0c\u8fb9\u624b\u7b97\u3002\u6839\u636e\u89e3\u6790\u81ea\u5df1\u627e\u4e00\u627e\u89c4\u5f8b\uff0c\u753b\u51fa\u4e00\u4e2a\u6811\u72b6\u56fe\u3002\u540e\u9762\u770b\u61c2\u4e86\u5c31\u662f\u56e0\u4e3a\u6709\u4e00\u4e2a\u89e3\u6790\u5b83\u753b\u4e86\u56fe\uff0c\u4e00\u76ee\u4e86\u7136\u3002"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u601d\u8003\uff0c\u65b9\u6cd5\u4e00\u4e2d\u54ea\u4e9b\u5730\u65b9\u9700\u8981\u6539\u8fdb\uff1f"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u4e3b\u8981\u662f\u6bcf\u6b21 dfs \u90fd\u4fdd\u5b58\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u8def\u5f84 path\uff0c\u5728\u8ba1\u7b97\u8def\u5f84\u548c\u662f\u5426\u76f8\u7b49\u65f6\uff0c\u4f1a\u7528 for \u5faa\u73af\u8ba1\u7b97\u4e00\u6b21\uff0c\u60f3\u529e\u6cd5\u628a\u91cd\u590d\u8ba1\u7b97\u7684 for \u5faa\u73af\u53d8\u6210 O(1) \u7684\u590d\u6742\u5ea6\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u89e3\u51b3\uff1a\u7528\u4e00\u4e2a Map \u8bb0\u5f55\u6bcf\u4e00\u6b21 dfs \u65f6\uff0c\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u7ed3\u679c\u5c31\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5229\u7528\u4e86\u524d\u7f00\u548c\u7684\u6982\u5ff5\uff1a"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{alt:"image-20210928102600885",src:t(77405).Z,width:"1161",height:"446"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5728 dfs \u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u628a\u8282\u70b9\u5230 root \u7684\u8def\u5f84\u548c\u505a\u4e00\u4e2a\u8bb0\u5f55\uff0c\u7528 Map \u7ed3\u6784\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5f53 targetSum \u4e3a 6 \u65f6\uff0c\u53ef\u4ee5\u770b\u5230\u5de6\u4e0b\u89d2\u53f6\u5b50\u7ed3\u70b9 21 \u5230\u5b83\u7684\u7956\u7236\u8282\u70b9 15 \u7684\u5dee\uff0c\u6b63\u597d\u662f 21 - 15 =  6\uff0c\u5373\u627e\u5230\u4e86\u4e00\u4e2a\u6ee1\u8db3\u7684\u8def\u5f84\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u6240\u4ee5\uff0c\u6211\u4eec\u5728\u7528 Map \u7ed3\u6784\u4f5c\u8bb0\u5f55\u65f6\uff0c\u4ec5\u4fdd\u5b58\u8def\u5f84\u4e0a\u5b58\u5728\u7684\u8def\u5f84\u548c\uff08key\uff09\uff0c\u548c\u5b58\u5728\u7684\u6b21\u6570\uff08value\uff09\u5373\u53ef\u3002\u7136\u540e\u5f53\u6211\u4eec\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5c31\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"TargetSum - \u65b0\u8282\u70b9\u8def\u5f84\u548c")," \u5728 Map \u4e2d\u67e5\u627e\u3002\u5f97\u5230\u7684 value \u5c31\u662f\u8fd9\u65b0\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\u603b\u6570\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u9700\u8981\u6ce8\u610f\uff1a"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6700\u5f00\u59cb\u5148\u653e\u5165\u6839\u7ed3\u70b9 ",(0,a.kt)("inlineCode",{parentName:"li"},"(0, 1)")," \u5230 Map \u4e2d\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u53ca\u65f6\u56de\u6eaf\uff0c\u4ece Map \u4e2d\u5220\u9664\u4e0d\u8981\u7684\u6570\u636e\uff1b")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var pathSum = function (root, targetSum) {\n  let res = 0;\n  if (root == null) return res;\n\n  // \u8bb0\u5f55\u8def\u5f84\u4e2d\u67d0\u4e2a\u524d\u7f00\u548c\u51fa\u73b0\u7684\u6b21\u6570\n  const count = new Map();\n  // \u9632\u6b62\u5305\u542b\u6839\u8282\u70b9\u7684\u65f6\u5019\u627e\u4e0d\u5230\n  count.set(0, 1);\n  dfs(root, 0);\n  return res;\n\n  // dfs\uff1a\u5f53\u524d\u8282\u70b9\uff0cmap\u7ed3\u6784\uff0c\u4e0a\u4e00\u6b21\u524d\u7f00\u548c\uff0c\u76ee\u6807\u603b\u6570\n  function dfs(node, curSum) {\n    if (!node) return null;\n\n    // \u5224\u65ad\u662f\u5426\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u524d\u7f00\u548c\n    curSum += node.val;\n    res += count.get(curSum - targetSum) || 0;\n    // \u5c06\u5f53\u524d\u524d\u7f00\u548c\u8bb0\u5f55\u4e0b\u6765\n    count.set(curSum, (count.get(curSum) || 0) + 1);\n\n    // \u7ee7\u7eed\u5f80\u4e0b\u9012\u5f52\n    dfs(node.left, curSum);\n    dfs(node.right, curSum);\n\n    // \u56de\u6eaf\uff0c\u6062\u590d\u72b6\u6001\n    count.set(curSum, count.get(curSum) - 1);\n  }\n}\n")),(0,a.kt)("h2",{id:"70-\u722c\u697c\u68af"},"70. \u722c\u697c\u68af"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/climbing-stairs/"},"70. \u722c\u697c\u68af")),(0,a.kt)("li",{parentName:"ul"},"0428\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u52a8\u6001\u89c4\u5212\uff0c\u4e0d\u80fd\u7528dfs")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u52a8\u6001\u89c4\u5212-\u6b63\u89e3"},"\u65b9\u6cd5\u4e00\uff1a","[\u52a8\u6001\u89c4\u5212]"," \u6b63\u89e3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dp[n] == dp[n-1] + dp[n-2];"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var climbStairs = function (n) {\n  if (n < 3) return n;\n  // \n  const dp = [];\n  dp[1] = 1;\n  dp[2] = 2;\n\n  for (let i = 3; i <= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5faa\u73af\u6267\u884c n \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\u7ef4\u62a4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u4f18\u5316-\u52a8\u6001\u89c4\u5212"},"\u65b9\u6cd5\u4e8c\uff1a\u4f18\u5316-\u52a8\u6001\u89c4\u5212"),(0,a.kt)("p",null,"\u8f6c\u6362\u516c\u5f0f\u4e2d\u5f97\u51fa\u7ed3\u8bba\uff1a\u7b2c n \u4e2a\u503c\u53ea\u53d7 n-1 \u548c n-2 \u503c\u7684\u5f71\u54cd\u3002\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u7ef4\u62a4\u4e00\u6574\u4e2a\u6570\u7ec4\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u6700\u540e\u4e24\u4e2a\u6570\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var climbStairs = function (n) {\n  if (n < 3) return n;\n  // dp[n] == dp[n-1] + dp[n-2];\n  let dp1 = 1;\n  let dp2 = 2;\n\n  for (let i = 3; i <= n; i++) {\n    // dp[i] = dp[i - 1] + dp[i - 2];\n    const temp = dp2;\n    dp2 = dp2 + dp1;\n    dp1 = temp;\n  }\n  return dp2;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5faa\u73af\u6267\u884c n \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u7528 2 \u4e2a\u6570\u7ef4\u62a4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\u3002")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e09dfs-\u8d85\u65f6"},"\u65b9\u6cd5\u4e09\uff1a","[dfs]"," \u8d85\u65f6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var climbStairs = function (n) {\n  let res = 0;\n  if (n === 0) return res;\n  dfs(n);\n  return res;\n\n  // dfs:\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9 1, 2\n  function dfs(n) {\n    if (n - 2 > 0) {\n      dfs(n - 2);\n    } else {\n      if (n - 2 === 0) res += 1;\n    }\n\n    if (n - 1 > 0) {\n      dfs(n - 1);\n    } else {\n      if (n - 1 === 0) res += 1;\n    }\n  }\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u9012\u5f52\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5f53\u4f20\u5165\u6570\u503c\u4e3a n \u65f6\uff0c\u9012\u5f52\u6267\u884c\u4e86 n \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u4f46\u662f\u9012\u5f52\u65f6\u5206\u4e3a 1 \u548c 2 \u4e24\u4e2a\u60c5\u51b5\uff0c\u867d\u7136\u4e0d\u662f O(n^2)\uff0c\u4f46\u662f\u4e5f\u6bd4\u52a8\u6001\u89c4\u5212\u591a\u3002")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8fd9\u91cc\u53ea\u7528\u4e86\u5e38\u6570\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u8f85\u52a9\u7a7a\u95f4\uff0c\u6545\u6e10\u8fdb\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\u3002")),(0,a.kt)("h2",{id:"988-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32"},"988. \u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/smallest-string-starting-from-leaf/"},"988. \u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32")),(0,a.kt)("li",{parentName:"ul"},"0428\uff0cmid\uff0cquick"),(0,a.kt)("li",{parentName:"ul"},"dfs \u7684\u4f7f\u7528")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00dfs-1"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6ce8\u610f\u5ba1\u9898\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6700\u7ec8\u7684\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f46\u8282\u70b9\u503c\u662f\u6570\u5b57\uff0c\u9700\u8981\u8f6c\u6362\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"String.fromCharCode(97 + node.val)")," \u516c\u5f0f\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u7ec8\u7684\u503c\u662f\u5012\u5e8f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u53f6\u5b50\u7ed3\u70b9\u5728\u5f00\u5934\uff0c\u6839\u7ed3\u70b9\u5728\u7ed3\u5c3e\u3002")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var smallestFromLeaf = function (root) {\n  // \u53ea\u8fd4\u56de\u4e00\u4e2a\u5373\u53ef\n  // \u8fd4\u56de\u4e00\u4e2a\u4eceroot\u5230\u53f6\u5b50\u7684\u8def\u5f84\uff0c\u8981\u6c42\u503c\u6700\u5c0f\u3002\n\n  // dfs\n  let res = Infinity;\n  if (!root) return '';\n  dfs(root, '');\n  return res;\n\n  function dfs(node, lastVal) { \n    // String.fromCharCode(64 + 1);  --\x3e A\n    const valNumber = String.fromCharCode(97 + node.val);\n    const val = '' + valNumber + lastVal;\n    \n    // \u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u503c\n    if (!node.left && !node.right) { \n        if (res === Infinity) res = val;\n      res = res > val ? val : res;\n      return;\n    }\n    node.left && dfs(node.left, val);\n    node.right && dfs(node.right, val);\n  }\n};\n")),(0,a.kt)("p",null,"\u6570\u5b57\u5411\u5b57\u6bcd\u7684\u8f6c\u5316\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const valNumber = String.fromCharCode(97 + node.val);\n")),(0,a.kt)("h2",{id:"543-\u4e8c\u53c9\u6811\u7684\u76f4\u5f84"},"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/diameter-of-binary-tree/"},"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84")),(0,a.kt)("li",{parentName:"ul"},"0428\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"dfs")),(0,a.kt)("p",null,"\u6211\u4e00\u76f4\u5728\u6c42\u4ece ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," \u5230\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u800c\u4e0d\u662f\u4ece ",(0,a.kt)("inlineCode",{parentName:"p"},"\u201c\u67d0\u4e2a\u8282\u70b9\u201d")," \u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u5927\u6df1\u5ea6\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6240\u4ee5\u8981\u660e\u786e\u8fd4\u56de\u503c\uff0c\u660e\u786e\u59cb\u7aef\u548c\u672b\u7aef\u7684\u503c\u3002")),(0,a.kt)("p",null,"\u4e3a\u4ec0\u4e48\u5f53\u65f6\u6ca1\u60f3\u5230\uff1f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6ca1\u601d\u8def\u65f6\uff0c\u4ece\u672b\u7aef\u5f00\u59cb\u5012\u9000\uff0c\u5f53\u8282\u70b9\u4e3a null\uff0c\u6df1\u5ea6\u5c31\u662f 0\uff1b\u5f53\u8282\u70b9\u4e3a\u53f6\u5b50\u7ed3\u70b9\uff0c\u6df1\u5ea6\u5c31\u662f1\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u6309\u7167\u9012\u5f52\u601d\u8def\u8003\u8651\u95ee\u9898\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u7684\u5165\u53c2\u548c\u8fd4\u56de\u503c\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5165\u53c2\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"node")," \u3002"),(0,a.kt)("li",{parentName:"ul"},"\u51fa\u53c2\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"node")," \u4e3a\u57fa\u7684\u6700\u5927\u6df1\u5ea6\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u7ed3\u675f\uff1a\u5f53 ",(0,a.kt)("inlineCode",{parentName:"li"},"node")," \u4e0d\u5b58\u5728\u65f6\uff0c\u6b64\u65f6\u6df1\u5ea6\u4e3a 0\uff1b\uff08\u53f6\u5b50\u7ed3\u70b9\u6df1\u5ea6\u4e3a 1\uff09"))),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\u5185\u5bb9\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6c42\u5206\u522b\u9012\u5f52\u6c42\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6 maxDepth\uff0c\u7136\u540e\u672c\u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"maxDepth + 1")," \u8fd9\u4e5f\u662f\u8fd4\u56de\u503c\u3002"))))),(0,a.kt)("li",{parentName:"ul"},"\u660e\u786e\u4e24\u4e2a\u95ee\u9898\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6c42 node \u7ed3\u70b9\u4e3a\u57fa\u7684\u6700\u957f\u76f4\u5f84 === node.left \u6700\u5927\u6df1\u5ea6 + node.right \u6700\u5927\u6df1\u5ea6"),(0,a.kt)("li",{parentName:"ul"},"\u6c42 node \u7ed3\u70b9\u4e3a\u57fa\u7684\u6700\u5927\u6df1\u5ea6 === Math.max( node.left \u6700\u5927\u6df1\u5ea6, node.right \u6700\u5927\u6df1\u5ea6 )")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var diameterOfBinaryTree = function (root) {\n  if (!root) return 0;\n  let max = 0;\n  dfs(root);\n  return max;\n\n  // \u6c42 node \u7684\u6700\u5927\u6df1\u5ea6\u3002\n  function dfs(node) {\n    if (!node) return 0;\n\n    const left = dfs(node.left);\n    const right = dfs(node.right);\n\n    // \u6c42 node \u8282\u70b9\u7684\u76f4\u5f84 = node.left\u6700\u5927\u6df1\u5ea6 + node.right\u6700\u5927\u6df1\u5ea6\n    // \u6bd4\u8f83\u5e76\u4fdd\u5b58\u6700\u5927\u76f4\u5f84\n    max = Math.max(max, left + right);\n\n    // \u8fd4\u56de\uff1anode \u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6 = node \u5b50\u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6 + 1\uff1b\n    return Math.max(left + right) + 1;\n  }\n};\n")),(0,a.kt)("h2",{id:"687-\u6700\u957f\u540c\u503c\u8def\u5f84"},"687. \u6700\u957f\u540c\u503c\u8def\u5f84"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/longest-univalue-path/"},"687. \u6700\u957f\u540c\u503c\u8def\u5f84")),(0,a.kt)("li",{parentName:"ul"},"0428\uff0cmid\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u533a\u5206\uff1a\u6700\u957f\u8def\u5f84 \u548c \u6df1\u5ea6\u7684\u6982\u5ff5")),(0,a.kt)("p",null,"\u6700\u957f\u8def\u5f84\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u6700\u957f\u8def\u5f84 0\uff0c\u76f8\u540c\u503c 1"),(0,a.kt)("li",{parentName:"ul"},"node\u6709 2 \u4e2a\u7ed3\u70b9\u65f6\uff0c\u6700\u957f\u8def\u5f84 = node.left + node.right\uff0c")),(0,a.kt)("p",null,"\u76f8\u540c\u503c\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728\u5224\u5b9a\u6700\u957f\u8def\u5f84\u65f6\uff0c\u8981\u5148\u8bbe\u5b9a \u5de6\u53f3\u5b50\u6811\u7684\u6700\u957f\u8def\u5f84\u4e3a 0\u3002\u53ea\u6709 node.val \u4e0e node.left.val \u76f8\u7b49\uff0c\u6700\u957f\u8def\u5f84\u624d\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"dfs(node.left)"),"\uff0c\u53f3\u5b50\u6811\u540c\u7406\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var longestUnivaluePath = function (root) {\n  if (!root) return 0;\n  // \u76f8\u540c\u503c\u7684\u6700\u957f\u8def\u5f84\n  let max = 0;\n  dfs(root);\n  return max;\n\n  // dfs\u8fd4\u56de\u503c\uff1anode\u7684\u6700\u5927\u6df1\u5ea6\n  function dfs(node) {\n    if (!node) return 0;\n\n    // \u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\n    const left = dfs(node.left);\n    const right = dfs(node.right);\n\n    //  \u5de6\u5b50\u6811\u548cnode\u503c\u76f8\u540c\uff0c\u624d\u8bb0\u5f55\u6700\u5927\u6df1\u5ea6\uff0c\u5426\u5219\u5de6\u5b50\u6811\u6df1\u5ea6\u4e3a0. \u53f3\u5b50\u6811\u540c\u7406\n    let leftLength = 0;\n    let rightLength = 0;\n    if (node.left && node.val === node.left.val) {\n      leftLength = left;\n    }\n    if (node.right && node.val === node.right.val) {\n      rightLength = right;\n    }\n\n    // \u76f8\u540c\u503c\u6700\u957f\u8def\u5f84\uff1a\n    max = Math.max(max, leftLength + rightLength);\n\n    // node(\u76f8\u540c\u503c)\u7684\u6700\u5927\u6df1\u5ea6\n    return Math.max(leftLength, rightLength) + 1;\n  }\n};\n\n")),(0,a.kt)("h2",{id:"124-\u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c"},"124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/"},"124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c")),(0,a.kt)("li",{parentName:"ul"},"0428\uff0chard\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"\u672c\u8d28\u4e0a\u662f 988\u3001543 \u4e00\u8109\u76f8\u627f\u7684\uff0c\u4f46\u6709\u4e86\u66f4\u597d\u7684\u9898\u89e3\u601d\u8def\uff1a")),(0,a.kt)("h4",{id:"\u6811\u95ee\u9898\u7684\u672c\u8d28"},(0,a.kt)("strong",{parentName:"h4"},"\u6811\u95ee\u9898\u7684\u672c\u8d28\uff1a")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6240\u6709\u6811\u7684\u9898\u76ee\uff0c\u90fd\u60f3\u6210\u4e00\u9897\u53ea\u6709\u6839\u3001\u5de6\u8282\u70b9\u3001\u53f3\u8282\u70b9 \u7684\u5c0f\u6811\u3002\u7136\u540e\u4e00\u9897\u9897\u5c0f\u6811\u6784\u6210\u6574\u68f5\u5927\u6811\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u8fd9\u9897\u5c0f\u6811\u5373\u53ef\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u63a5\u4e0b\u6765\u5206\u60c5\u51b5\uff0c \u6309\u7167\u9898\u610f\uff1a\u4e00\u9897\u4e09\u4e2a\u8282\u70b9\u7684\u5c0f\u6811\u7684\u7ed3\u679c\u53ea\u53ef\u80fd\u6709\u5982\u4e0b6\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u4e00\u4e00\u53bb\u5206\u6790\uff1a",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u6839 + \u5de6 + \u53f3"),(0,a.kt)("li",{parentName:"ol"},"\u6839 + \u5de6"),(0,a.kt)("li",{parentName:"ol"},"\u6839 + \u53f3"),(0,a.kt)("li",{parentName:"ol"},"\u6839"),(0,a.kt)("li",{parentName:"ol"},"\u5de6"),(0,a.kt)("li",{parentName:"ol"},"\u53f3")))),(0,a.kt)("h4",{id:"\u89e3\u9898\u601d\u8def"},"\u89e3\u9898\u601d\u8def"),(0,a.kt)("p",null,"\u4e8c\u53c9\u6811 abc\uff0ca \u662f\u6839\u7ed3\u70b9\uff08\u9012\u5f52\u4e2d\u7684 root\uff09\uff0cbc\u3001 \u662f\u5de6\u3001\u53f3\u5b50\u7ed3\u70b9\uff08\u4ee3\u8868\u5176\u9012\u5f52\u540e\u7684\u6700\u4f18\u89e3\uff09\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"    a\n   / \\\n  b   c \n")),(0,a.kt)("p",null,"\u6700\u5927\u7684\u8def\u5f84\uff0c\u53ef\u80fd\u7684\u8def\u5f84\u60c5\u51b5\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"b + a + c\uff0c\u4ee5 a \u7ed3\u70b9\u4e3a\u57fa\u7684\u6700\u5927\u8def\u5f84\u3002"),(0,a.kt)("li",{parentName:"ol"},"b + a +  a \u7684\u7236\u7ed3\u70b9\u3002\u4ee5 a \u7684\u67d0\u4e00\u4e2a\u7236\u8282\u70b9\u4e3a\u6700\u5927\u8def\u5f84\uff0cb + a \u53ea\u662f\u5b83\u5176\u4e2d\u4e00\u4e2a\u5206\u652f\u7684\u4e00\u5c0f\u6bb5\uff1b"),(0,a.kt)("li",{parentName:"ol"},"c  + a + a \u7684\u7236\u7ed3\u70b9\u3002\u4ee5 a \u7684\u67d0\u4e00\u4e2a\u7236\u8282\u70b9\u4e3a\u6700\u5927\u8def\u5f84\uff0cc + a \u53ea\u662f\u5b83\u5176\u4e2d\u4e00\u4e2a\u5206\u652f\u7684\u4e00\u5c0f\u6bb5\uff1b")),(0,a.kt)("p",null,"\u60c5\u51b5\u4e00\uff1a\u5728\u6211\u4eec\u6bcf\u6b21\u904d\u5386\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"node")," \u65f6\uff0c\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"Math.max()"),"  \u6bd4\u8f83\u8ba1\u7b97\uff1b"),(0,a.kt)("p",null,"\u60c5\u51b5\u4e8c\u3001\u4e09\uff1a\u5728\u6211\u4eec\u904d\u5386\u5b8c ",(0,a.kt)("inlineCode",{parentName:"p"},"node")," \u65f6\u63d0\u4f9b\u7684\u8fd4\u56de\u503c\uff0c\u7ed9 a \u7684\u7236\u8282\u70b9\u505a\u53c2\u8003\u3002"),(0,a.kt)("p",null,"\u8d1f\u503c\u7684\u60c5\u51b5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728\u8ba1\u7b97 b \u548c c \u65f6\uff0c\u5982\u679c\u9047\u5230\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u90a3\u76f4\u63a5\u820d\u5f03\uff0c\u5206\u652f\u7684\u7ed3\u679c\u4e3a 0\uff1b")),(0,a.kt)("p",null,"\u548c 988\u3001543 \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u662f\u6c42\u7684\u4e0d\u518d\u662f\u5c42\u6570\u548c\u6df1\u5ea6\uff0c\u800c\u662f\u503c\u7684\u603b\u548c\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u5e94\u5f53\u662f ",(0,a.kt)("inlineCode",{parentName:"p"}," + node.val"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"var maxPathSum = function(root) {\n  if (!root) return 0\n  let max = -Infinity;\n  dfs(root);\n  return max;\n\n  // \u8fd4\u56de node \u8282\u70b9\u5927\u5355\u8fb9\u6700\u5927\u8def\u5f84\u548c\uff0c\u5373Math.max(root, root+left, root+right)\n  function dfs(node){\n    if (!node) return 0;\n\n    //\u8ba1\u7b97\u5de6\u8fb9\u5206\u652f\u6700\u5927\u503c\uff0c\u5de6\u8fb9\u5206\u652f\u5982\u679c\u4e3a\u8d1f\u6570\u8fd8\u4e0d\u5982\u4e0d\u9009\u62e9\n    const left = Math.max(0, dfs(node.left));\n    //\u8ba1\u7b97\u53f3\u8fb9\u5206\u652f\u6700\u5927\u503c\uff0c\u53f3\u8fb9\u5206\u652f\u5982\u679c\u4e3a\u8d1f\u6570\u8fd8\u4e0d\u5982\u4e0d\u9009\u62e9\n    const right = Math.max(0, dfs(node.right));\n\n    // \u60c5\u51b5\u4e00\uff1aleft + root + right \u4f5c\u4e3a\u8def\u5f84\u4e0e\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u5386\u53f2\u6700\u5927\u503c\u505a\u6bd4\u8f83\n    max = Math.max(max, left + right + node.val);\n\n    // \u60c5\u51b5\u4e8c\u3001\u4e09:\u8fd4\u56de\u7ecf\u8fc7root\u7684\u5355\u8fb9\u6700\u5927\u5206\u652f\u7ed9\u5f53\u524droot\u7684\u7236\u8282\u70b9\u8ba1\u7b97\u4f7f\u7528\n    return Math.max(left, right) + node.val;\n  }\n};\n")),(0,a.kt)("h2",{id:"654-\u6700\u5927\u4e8c\u53c9\u6811"},"654. \u6700\u5927\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximum-binary-tree/"},"654. \u6700\u5927\u4e8c\u53c9\u6811"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"0429\uff0cmid\uff0cquick")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u601d\u8def\u548c 105. 106. \u76f8\u4f3c\uff0c\u53ef\u4ee5\u4e00\u8d77\u590d\u4e60")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u4f18\u5316\u70b9\uff1a\u627e\u6700\u5927\u503c\u662f O(n) \u7684\u590d\u6742\u5ea6\uff0c\u4e8c\u5206\u6cd5\u53ef\u4ee5\u4f18\u5316\u4e3a O(logn)\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u5927\u503c+\u9012\u5f52 == \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\u53ef\u4ee5\u4f18\u5316\u4e3a O(nlogn)\u3002"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var constructMaximumBinaryTree = function (nums) {\n  if (!nums) return null;\n  return build(0, nums.length - 1);\n\n  // \u8fd4\u56de\uff1a\u6784\u5efa\u597d\u7684\u5b50\u6811\n  function build(start, end) {\n    // \u8fb9\u754c\n    if (start > end) return null;\n\n    // \u627e\u6700\u5927\u503c\u548c\u4e0b\u6807\n    let maxIndex = start;\n    let maxVal = nums[start];\n    for (let i = start; i <= end; i++) {\n      if (nums[i] > maxVal) {\n        maxVal = nums[i];\n        maxIndex = i;\n      }\n    }\n    // \u521b\u5efa\u8282\u70b9\n    const root = new TreeNode();\n    root.val = maxVal;\n    // \u5206\u5272\n    root.left = build(start, maxIndex - 1);\n    root.right = build(maxIndex + 1, end);\n    return root;\n  }\n};\n")),(0,a.kt)("h2",{id:"617-\u5408\u5e76\u4e8c\u53c9\u6811"},"617. \u5408\u5e76\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode-cn.com/problems/merge-two-binary-trees/"},"617. \u5408\u5e76\u4e8c\u53c9\u6811")),(0,a.kt)("li",{parentName:"ul"},"0429\uff0ceasy\uff0canswer"),(0,a.kt)("li",{parentName:"ul"},"dfs \u65b9\u6cd5\u8f83\u4e3a\u597d\u7406\u89e3\uff0cbfs \u53ef\u4ee5\u6682\u65f6\u4e0d\u770b\u4e86")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e00dfs-2"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var mergeTrees = function (root1, root2) {\n  return dfs(root1, root2);\n\n  function dfs(node1, node2) {\n    // \u8fd4\u56de\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u90fd\u4e0d\u5b58\u5728\u8fd9\u4e2a\u8282\u70b9\uff0c\u5219\u8fd4\u56de null\n    if (!node1 && !node2) return null\n    \n    // \u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u7528\u518d\u5224\u65ad\u76f8\u52a0\uff0c\u76f4\u63a5\u5427\u53e6\u4e00\u4e2a\u5b58\u5728\u7684\u5b50\u6811\u9644\u5230node\u5373\u53ef\u3002\n    if (!node1) return node2;\n    if (!node2) return node1;\n    // \u65b0\u5efa\u8282\u70b9\n    const node = new TreeNode();\n    node.val = node1.val + node2.val;\n    node.left = dfs(node1.left, node2.left);\n    node.right = dfs(node1.right, node2.right);\n    return node;\n  }\n};\n\n// \u4f18\u5316\uff1a\nvar mergeTrees = function (root1, root2) {\n  // \u8fd4\u56de\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u90fd\u4e0d\u5b58\u5728\u8fd9\u4e2a\u8282\u70b9\uff0c\u5219\u8fd4\u56de null\n  if (!root1 && !root2) return null\n\n  // \u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u7528\u518d\u5224\u65ad\u76f8\u52a0\uff0c\u76f4\u63a5\u5427\u53e6\u4e00\u4e2a\u5b58\u5728\u7684\u5b50\u6811\u9644\u5230node\u5373\u53ef\u3002\n  if (!root1) return root2;\n  if (!root2) return root1;\n  // \u65b0\u5efa\u8282\u70b9\n  const node = new TreeNode(root1.val + root2.val);\n  node.left = mergeTrees(root1.left, root2.left);\n  node.right = mergeTrees(root1.right, root2.right);\n  return node;\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4 / \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("em",{parentName:"li"},"O"),"(min(",(0,a.kt)("em",{parentName:"li"},"m"),",",(0,a.kt)("em",{parentName:"li"},"n"),"))\uff0c\u4e3b\u8981\u53d6\u51b3\u4e8e\u8282\u70b9\u6570\u66f4\u5c11\u7684\u90a3\u4e2a\u4e8c\u53c9\u6811\u3002")),(0,a.kt)("h4",{id:"\u65b9\u6cd5\u4e8cbfs"},"\u65b9\u6cd5\u4e8c\uff1abfs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u597d\u7406\u89e3\uff0c\u590d\u4e60\u65f6\u6682\u65f6\u5ffd\u7565\u5427\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u548c dfs \u76f8\u540c\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var mergeTrees = function (root1, root2) {\n  // \u8fb9\u754c\n  if (root1 === null) return root2;\n  if (root2 === null) return root1;\n\n  const root = new TreeNode(root1.val + root2.val);\n  const queue = [[root, root1, root2]];\n\n  // bfs\n  // \u4e0e\u4f20\u7edf\u601d\u7ef4\u4e0d\u540c\uff0c\u5728\u6bcf\u6b21push node\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u5904\u7406\u4e86node.val\uff0c\u9700\u8981\u5904\u7406\u7684\u662f node.left \u548c node.right\n  while (queue.length) {\n    const [node, node1, node2] = queue.shift();\n\n    // \u5de6\u5b50\u6811\n    if (node1.left || node2.left) {\n      if (node1.left && node2.left) {\n        node.left = new TreeNode(node1.left.val + node2.left.val);\n        queue.push([node.left, node1.left, node2.left]);\n      } else {\n        node.left = node1.left || node2.left;\n      }\n    }\n    // \u53f3\u5b50\u6811\n    if (node1.right || node2.right) {\n      if (node1.right && node2.right) {\n        node.right = new TreeNode(node1.right.val + node2.right.val);\n        queue.push([node.right, node1.right, node2.right]);\n      } else {\n        node.right = node1.right || node2.right;\n      }\n    }\n  }\n  return root;\n}\n")))}k.isMDXComponent=!0},77405:function(e,n,t){n.Z=t.p+"assets/images/1632796885-xRzntC-file_1632796885933-ac923d1865e29b1d46138403f6def4bd.png"},32508:function(e,n,t){n.Z=t.p+"assets/images/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303231303230343135313730323434332e706e67-8d5f25c5df88ff9e34257cfc04a422ab.png"},11782:function(e,n,t){n.Z=t.p+"assets/images/tree-69c21fd4b33762fb1eec250ac5d95cd3.jpg"},38455:function(e,n,t){n.Z=t.p+"assets/images/\u4e2d\u5e8f\u904d\u5386-\u8fed\u4ee3-5f49ed8e5e91565d566ceb4680546953.gif"},83704:function(e,n,t){n.Z=t.p+"assets/images/\u4e2d\u5e8f\u904d\u5386-2ab8f14cf221a4410e39bea8e31fe1a3.gif"},84361:function(e,n,t){n.Z=t.p+"assets/images/\u622a\u5c4f2022-04-25 \u4e0b\u53483.58.21-f5403fe22b18358fe52f4bc43396e4ec.png"},89957:function(e,n,t){n.Z=t.p+"assets/images/\u622a\u5c4f2022-04-25 \u4e0b\u53483.58.53-1e98b2bf829592280f8e3ca65fc35ff8.png"}}]);